{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/twgl.js/dist/4.x/twgl-full.js","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./client/src/test_1/style.css?1bcd","webpack:///./client/src/test_1/style.css","webpack:///./client/src/test_1/reset.css?7f55","webpack:///./client/src/test_1/reset.css","webpack:///./client/src/library/modules/textModule.js","webpack:///./client/src/library/modules/rendererModule.js","webpack:///./client/src/library/glsl/cursor.vert","webpack:///./client/src/library/glsl/cursor.frag","webpack:///./client/src/library/Renderer.js","webpack:///./client/src/test_1/textData1.js","webpack:///./client/src/test_1/default.vert","webpack:///./client/src/test_1/default.frag","webpack:///./client/src/test_1/defaultFont.js","webpack:///./client/src/test_1/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","factory","self","createAttribsFromArrays","createBuffersFromArrays","gl","arrays","buffers","keys","forEach","createBufferFromArray","indices","numElements","length","elementType","typedArrays","getGLTypeForTypedArray","makeTypedArray","ii","positionKeys","array","getArray","numComponents","getNumComponents","Error","concat","getNumElementsFromNonIndexedArrays","createBufferFromTypedArray","createBufferInfoFromArrays","srcBufferInfo","newAttribs","bufferInfo","assign","attribs","newIndices","ELEMENT_ARRAY_BUFFER","defaults","attribPrefix","attrib","bindBuffer","ARRAY_BUFFER","buffer","numBytes","getBufferParameter","BUFFER_SIZE","bytesPerValue","type","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","getBytesPerValueForGLType","totalElements","size","getNumElementsFromAttributes","setAttribInfoBufferFromArray","attribInfo","offset","undefined","bufferSubData","setBufferFromTypedArray","drawType","setAttributePrefix","prefix","setAttributeDefaults_","newDefaults","helper","copyExistingProperties","getNumComponents_","getArray_","_interopRequireWildcard","obj","newObj","desc","getOwnPropertyDescriptor","set","default","bufferData","STATIC_DRAW","typedArray","isBuffer","createBuffer","isIndices","data","texcoordRE","colorRE","guessNumComponentsFromName","test","arrayName","isArrayBuffer","Array","isArray","Type","Uint16Array","Float32Array","attribName","normalization","WebGLBuffer","normalize","numValues","arrayType","BYTES_PER_ELEMENT","getGLTypeForTypedArrayType","typedArrayType","Int8Array","Uint8Array","getNormalizationForTypedArray","stride","divisor","drawBufferInfo","drawObjectList","objectsToDraw","lastUsedProgramInfo","lastUsedBufferInfo","active","programInfo","vertexArrayInfo","bindBuffers","TRIANGLES","useProgram","program","vertexArrayObject","bindVertexArray","programs","setBuffersAndAttributes","setUniforms","uniforms","count","instanceCount","drawElementsInstanced","drawElements","drawArraysInstanced","drawArrays","bindFramebufferInfo","framebufferInfo","target","FRAMEBUFFER","bindFramebuffer","framebuffer","viewport","width","height","drawingBufferWidth","drawingBufferHeight","createFramebufferInfo","attachments","fb","createFramebuffer","colorAttachmentCount","defaultAttachments","attachmentOptions","attachment","format","attachmentPoint","attachmentsByFormat","getAttachmentPointForFormat","COLOR_ATTACHMENT0","renderbufferFormats","isRenderbufferFormat","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","textureOptions","auto","min","minMag","LINEAR","mag","wrapS","wrap","CLAMP_TO_EDGE","wrapT","textures","createTexture","isRenderbuffer","framebufferRenderbuffer","isTexture","layer","framebufferTextureLayer","level","framebufferTexture2D","texTarget","TEXTURE_2D","push","resizeFramebufferInfo","ndx","resizeTexture","src","dst","copyNamedProperties","names","WebGLRenderbuffer","isShader","WebGLShader","WebGLTexture","isSampler","WebGLSampler","warn","error","console","axisRotate","axis","angleInRadians","MatType","x","y","z","Math","sqrt","xx","yy","zz","cos","sin","oneMinusCosine","r00","r01","r02","r10","r11","r12","r20","r21","r22","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","axisRotation","copy","frustum","left","right","bottom","top","near","far","dx","dy","dz","getAxis","v3","off","getTranslation","identity","inverse","lookAt","eye","up","xAxis","tempV3a","yAxis","tempV3b","zAxis","tempV3c","subtract","cross","multiply","a","b","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","negate","ortho","perspective","fieldOfViewYInRadians","aspect","zNear","zFar","f","tan","PI","rangeInv","rotateX","rotateY","rotateZ","rotationX","rotationY","rotationZ","scale","v","v0","v1","v2","scaling","setAxis","setDefaultType","ctor","oldType","setTranslation","transformDirection","transformNormal","mi","transformPoint","translate","m30","m31","m32","m33","translation","transpose","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t0","t1","t2","t3","create3DFVertices","createAugmentedTypedArray","createCubeVertices","createPlaneVertices","createSphereVertices","createTruncatedConeVertices","createXYQuadVertices","createCresentVertices","createCylinderVertices","createTorusVertices","createDiscVertices","deindexVertices","vertices","newVertices","filter","allButIndices","channel","srcBuffer","dstBuffer","constructor","jj","flattenNormals","normals","normal","numNormals","nax","nay","naz","nbx","nby","nbz","ncx","ncy","ncz","nx","ny","nz","makeRandomVertexColors","options","position","vcolors","rand","range","random","color","numVertsPerColor","vertsPerColor","numSets","_ii2","reorientDirections","reorientNormals","reorientPositions","reorientVertices","concatVertices","arrayOfArrays","baseName","_loop","arrayInfo","base","newArrays","info","arraySpec","spec","getLengthOfCombinedArrays","newArraySpec","createArrayOfSameType","newArray","baseIndex","copyElements","copyArraysToNewArray","duplicateVertices","srcArray","createDiscBuffers","createDiscBufferInfo","createTorusBuffers","createTorusBufferInfo","createCylinderBuffers","createCylinderBufferInfo","createCresentBuffers","createCresentBufferInfo","createXYQuadBuffers","createXYQuadBufferInfo","createTruncatedConeBuffers","createTruncatedConeBufferInfo","createSphereBuffers","createSphereBufferInfo","createPlaneBuffers","createPlaneBufferInfo","createCubeBuffers","createCubeBufferInfo","create3DFBuffers","create3DFBufferInfo","attributes","m4","augmentTypedArray","cursor","arguments","reset","opt_index","this","opt_type","applyFuncToV3Array","matrix","fn","len","tmp","indexOf","xOffset","yOffset","texcoord","depth","subdivisionsWidth","subdivisionsDepth","numVertices","positions","texcoords","u","numVertsAcross","_z","_x","radius","subdivisionsAxis","subdivisionsHeight","opt_startLatitudeInRadians","opt_endLatitudeInRadians","opt_startLongitudeInRadians","opt_endLongitudeInRadians","latRange","longRange","theta","phi","sinTheta","cosTheta","sinPhi","ux","uy","uz","numVertsAround","_x2","_y","CUBE_FACE_INDICES","k","cornerVertices","faceNormals","uvCoords","faceIndices","uv","bottomRadius","topRadius","radialSubdivisions","verticalSubdivisions","opt_topCap","opt_bottomCap","topCap","bottomCap","extra","vertsAroundEdge","slant","atan2","cosSlant","sinSlant","end","ringRadius","_yy","_ii","expandRLEData","rleData","padding","runLength","element","slice","apply","colors","numVerts","verticalRadius","outerRadius","innerRadius","thickness","subdivisionsDown","startOffset","endOffset","subdivisionsThick","offsetRange","lerp","createArc","arcRadius","normalMult","normalAdd","uMult","uAdd","uBack","xBack","angle","px","py","pz","add","createSurface","leftArcOffset","rightArcOffset","numVerticesDown","bodySubdivisions","startAngle","endAngle","radialParts","bodyParts","sliceAngle","sliceSin","ring","ringAngle","xSin","zCos","_slice","_ring","nextRingIndex","nextSliceIndex","divisions","stacks","stackPower","firstIndex","radiusSpan","pointsPerStack","stack","stackRadius","pow","createBufferFunc","createBufferInfoFunc","arraySpecPropertyNames","dstNdx","arraySrc","createAttributeSetters","createProgram","createProgramFromScripts","shaderScriptIds","opt_attribs","opt_locations","opt_errorCallback","progOptions","getProgramOptions","shaders","shader","createShaderFromScript","defaultShaderType","errorCallback","createProgramFromSources","createProgramInfo","shaderSources","good","map","source","script","getElementById","text","createProgramInfoFromProgram","createUniformSetters","createUniformBlockSpecFromProgram","createUniformBlockInfoFromProgram","createUniformBlockInfo","blockName","uniformBlockSpec","createTransformFeedback","tf","bindTransformFeedback","TRANSFORM_FEEDBACK","bindTransformFeedbackInfo","createTransformFeedbackInfo","setAttributes","attribSetters","setters","values","actualSetters","uniformSetters","numArgs","andx","vals","setter","setUniformBlock","uniformBlockInfo","bindUniformBlock","UNIFORM_BUFFER","DYNAMIC_DRAW","setBlockUniforms","utils","document","typeMap","getBindPointForSamplerType","bindPoint","intSetter","location","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","samplerSetter","unit","isWebGL2","textureOrPair","texture","sampler","activeTexture","TEXTURE0","bindTexture","bindSampler","samplerArraySetter","units","Int32Array","index","floatAttribSetter","disableVertexAttribArray","vertexAttrib4fv","vertexAttrib3fv","vertexAttrib2fv","vertexAttrib1fv","enableVertexAttribArray","vertexAttribPointer","vertexAttribDivisor","intAttribSetter","vertexAttrib4iv","vertexAttribIPointer","uintAttribSetter","vertexAttrib4uiv","matAttribSetter","typeInfo","defaultSize","rowOffset","uniform1f","arraySetter","uniform1fv","uniform2fv","uniform3fv","uniform4fv","Uint32Array","uniform1ui","uniform1uiv","uniform2uiv","uniform3uiv","uniform4uiv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","uniformMatrix2x3fv","uniformMatrix2x4fv","uniformMatrix3x2fv","uniformMatrix3x4fv","uniformMatrix4x2fv","uniformMatrix4x3fv","attrTypeMap","spaceRE","loadShader","shaderSource","shaderType","errFn","createShader","lineOffset","replace","compileShader","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","split","line","join","addLineNumbers","deleteShader","transformFeedbackVaryings","opt","attribLocations","getShaderTypeFromScriptType","scriptType","FRAGMENT_SHADER","VERTEX_SHADER","deleteShaders","realShaders","newShaders","elem","attachShader","bindAttribLocation","varyings","transformFeedbackMode","SEPARATE_ATTRIBS","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","scriptId","opt_shaderType","shaderScript","isBuiltIn","startsWith","textureUnit","createUniformSetter","uniformInfo","getUniformLocation","substr","toString","numUniforms","ACTIVE_UNIFORMS","getActiveUniform","numVaryings","TRANSFORM_FEEDBACK_VARYINGS","varying","getTransformFeedbackVarying","transformFeedbackInfo","buf","bindBufferRange","TRANSFORM_FEEDBACK_BUFFER","bindBufferBase","uniformData","uniformIndices","pair","pname","getActiveUniforms","blockSpecs","numUniformBlocks","ACTIVE_UNIFORM_BLOCKS","getActiveUniformBlockName","blockSpec","usedByVertexShader","getActiveUniformBlockParameter","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","usedByFragmentShader","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","used","usedByVertexSahder","arraySuffixRE","ArrayBuffer","uniformBufferIndex","uniformBlockBinding","uniformNdx","asFloat","bufferBindIndex","byteLength","numAttribs","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","setTextureDefaults_","textureColor","setDefaultTextureColor","createSampler","createSamplers","samplerOptions","samplers","setSamplerParameters","setEmptyTexture","setTextureFromArray","loadTextureFromUrl","setTextureFromElement","setTextureFilteringForSize","setTextureParameters","createTextures","callback","noop","numDownloading","errors","images","callCallbackIfReady","setTimeout","onLoadFn","err","tex","img","internalFormat","RGBA","formatType","getFormatAndTypeForInternalFormat","getTextureTypeForArrayType","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","canGenerateMipmap","canFilter","getNumComponentsForFormat","formatInfo","numColorComponents","getBytesPerElementForInternalFormat","crossOrigin","ctx","createElement","getContext","RGB","RG","textureInternalFormatInfo","bytesPerElement","bytesPerElementMap","textureFormat","isPowerOf2","colorRenderable","textureFilterable","defaultType","guessDimensions","lastPackState","savePackState","colorspaceConversion","getParameter","UNPACK_COLORSPACE_CONVERSION_WEBGL","pixelStorei","premultiplyAlpha","UNPACK_PREMULTIPLY_ALPHA_WEBGL","flipY","UNPACK_FLIP_Y_WEBGL","restorePackState","saveSkipState","unpackAlignment","UNPACK_ALIGNMENT","unpackRowLength","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","restoreSkipState","setTextureSamplerParameters","parameteriFn","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_3D","TEXTURE_WRAP_R","wrapR","minLod","TEXTURE_MIN_LOD","maxLod","TEXTURE_MAX_LOD","baseLevel","TEXTURE_BASE_LEVEL","maxLevel","TEXTURE_MAX_LEVEL","texParameteri","samplerParameteri","generateMipmap","filtering","NEAREST","shouldAutomaticallySetTextureFilteringForSize","getCubeFaceOrder","cubeFaceOrder","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","getCubeFacesWithNdx","facesWithNdx","face","sort","slices","imgWidth","imgHeight","nodeName","canvas","drawImage","createImageBitmap","colorSpaceConversion","then","imageBitmap","TEXTURE_2D_ARRAY","smallest","largest","max","xMult","yMult","texImage3D","srcX","srcY","texSubImage3D","setToAnonymousIfUndefinedAndURLIsNotSameOrigin","url","href","hostname","port","protocol","localOrigin","URL","origin","urlIsSameOrigin","isTexImageSource","ImageBitmap","ImageData","HTMLElement","loadAndUseImage","Image","clearEventHandlers","removeEventListener","onError","onLoad","msg","addEventListener","bm","cb","fetch","response","ok","blob","bitmap","catch","e","loadImage","setTextureTo1PixelColor","make1Pixel","loadCubemapFromUrls","urls","imgs","numToLoad","faces","faceTarget","otherTarget","loadSlicesFromUrls","firstImage","Uint8ClampedArray","getTypedArrayTypeForGLType","dimensions","glEnumToString","cbrt","faceSize","subarray","_exportNames","primitives","_twgl","addExtensionsToContext","getWebGLContext","resizeCanvasToDisplaySize","setDefaults","context","createContext","create3DContext","multiplier","clientWidth","clientHeight","_draw","_framebuffers","_programs","_typedarrays","_vertexArrays","prefixRE","addExtensionToContext","extensionName","ext","getExtension","enums","fnSuffix","exec","enumSuffix","isFunc","suffix","endsWith","substring","origFn","supportedExtensions","Int16Array","CTOR","glTypeToTypedArray","tt","SharedArrayBuffer","isWebGL1","texStorage2D","haveEnumsForType","existing","addEnums","VecType","distance","distanceSq","divide","divScalar","dot","lerpV","lengthSq","mulScalar","lenSq","createVertexArrayInfo","programInfos","vao","createVertexArray","createVAOAndSetAttributes","createVAOFromBufferInfo","useSourceMap","list","item","content","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","_i","memo","stylesInDom","isOldIE","Boolean","window","all","atob","getTarget","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","listToStyles","styles","newStyles","part","css","media","parts","addStylesToDom","domStyle","j","refs","addStyle","insertStyleElement","style","nonce","setAttribute","insert","appendChild","textStore","replaceText","replacement","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","singleton","singletonCounter","update","styleIndex","firstChild","parentNode","removeStyleElement","newList","mayRemove","_domStyle","locals","findGlyph","fontList","char","find","font","glyphs","letter","setCharPositions","textbox","rect","getBoundingClientRect","textboxWidth","textboxHeight","maxWidth","paddingX","maxHeight","paddingY","sublineY","lineList","iLine","charX","sublineIndex","sublineHeight","nextStepY","charList","iChar","charWidth","ratio","charHeight","charY","tracking","leading","nextChar","wrapLine","nextCharWidth","log","lastChar","lineWidth","thisSublineIndex","sublineWidth","horizontalRemainder","sublineCharList","horizontalAlign","gap","lastLine","lastCharOfLastLine","linesTotalHeight","verticalRemainder","verticalAlign","newTextboxHeightPixels","setRenderInfos","charWidthPixels","charHeightPixels","charXPixels","charYPixels","renderInfo","twgl","u_matrix","u_rand","setCanvasSize","setCanvasWidth","setCanvasHeight","Renderer","state","textboxList","mouseX","mouseY","mousePressed","shiftPressed","pixelRatio","setContainer","parent","innerWidth","innerHeight","body","rm","glOptions","antialias","alpha","stencil","preserveDrawingBuffer","premultipliedAlpha","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","loop","time","DEPTH_TEST","disable","SCISSOR_TEST","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","canvasRect","getRelativeBoundingRect","scissor","tm","thisLine","firstChar","prevChar","cursorHeightPixels","cursorXPixels","cursorYPixels","cursorVert","cursorFrag","currentDate","Date","u_dTime","getTime","clickTime","requestAnimationFrame","feedData","textData","fontData","glyph","vert","frag","event","clickX","offsetX","clickY","offsetY","some","cursorSublineIndex","lineBottom","clickDate","thisLineCopy","thisChar","charListOnRight","splice","prevCharAsPlaceholder","thisCharAsPlaceHolder","prevLine","removedChar","removedCharAsPlaceHolder","mergedCharList","includes","styleCopy","start","setButtons","buttonIdList","buttonId","button","toUpperCase","setCursor","write","isEditable","inlineAlign","A","defaultVert","defaultFrag","textureCoords","B","renderer"],"mappings":"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IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,EAAG,EAC/D,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAC/D,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,GACjE,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,GAAI,IAAK,GAAI,GACpE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpE,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,GAC3D,IAAK,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,EAAG,EAAG,IAAK,GAAI,GAAI,IAAK,EAAG,GACpE,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,GAAI,EACrE,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GACjE,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GACjE,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GACjE,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAClE,GAAI,GAAI,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,GAAI,IAAK,GACpE,EAAG,IAAK,EAAG,EAAG,IAAK,GAAI,GAAI,IAAK,GAAI,EA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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","/*!\n * @license twgl.js 4.11.0 Copyright (c) 2015, Gregg Tavares All Rights Reserved.\n * Available via the MIT license.\n * see: http://github.com/greggman/twgl.js for details\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twgl\"] = factory();\n\telse\n\t\troot[\"twgl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/twgl-full.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/attributes.js\":\n/*!***************************!*\\\n  !*** ./src/attributes.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttribsFromArrays = createAttribsFromArrays;\nexports.createBuffersFromArrays = createBuffersFromArrays;\nexports.createBufferFromArray = createBufferFromArray;\nexports.createBufferFromTypedArray = createBufferFromTypedArray;\nexports.createBufferInfoFromArrays = createBufferInfoFromArrays;\nexports.setAttribInfoBufferFromArray = setAttribInfoBufferFromArray;\nexports.setAttributePrefix = setAttributePrefix;\nexports.setAttributeDefaults_ = setDefaults;\nexports.getNumComponents_ = getNumComponents;\nexports.getArray_ = getArray;\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(/*! ./typedarrays.js */ \"./src/typedarrays.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level attribute and buffer related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/attributes\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  attribPrefix: \"\"\n};\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n * In otherwords I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\n\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || gl.STATIC_DRAW);\n}\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (helper.isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n\n  type = type || gl.ARRAY_BUFFER;\n  var buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n} // This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\n\n\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return true;\n  } // eslint-disable-line\n\n\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nvar texcoordRE = /coord|texture/i;\nvar colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  var numComponents;\n\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3; // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw new Error(\"Can not guess numComponents for attribute '\".concat(name, \"'. Tried \").concat(numComponents, \" but \").concat(length, \" values is not evenly divisible by \").concat(numComponents, \". You should specify it.\"));\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (typedArrays.isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (typedArrays.isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array\n    };\n  }\n\n  var Type = array.type;\n\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n\n  return new Type(array.data);\n}\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of compoments of an array\n * @typedef {Object} FullArraySpec\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {(number|number[]|ArrayBufferView)} data The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {constructor} [type] type. This is only used if `data` is a JavaScript array. It is the constructor for the typedarray. (eg. `Uint8Array`).\n * For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: Uint8Array, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = undefined. Note: undefined = don't call gl.vertexAttribDivisor\n *    where as anything else = do call it with this value\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @property {WebGLBuffer} [buffer] Buffer to use for this attribute. This lets you use your own buffer\n *    but you will need to supply `numComponents` and `type`. You can effectively pass an `AttribInfo`\n *    to provide this. Example:\n *\n *         const bufferInfo1 = twgl.createBufferInfoFromArrays(gl, {\n *           position: [1, 2, 3, ... ],\n *         });\n *         const bufferInfo2 = twgl.createBufferInfoFromArrays(gl, {\n *           position: bufferInfo1.attribs.position,  // use the same buffer from bufferInfo1\n *         });\n *\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @param {module:twgl.BufferInfo} [srcBufferInfo] a BufferInfo to copy from\n *   This lets you share buffers. Any arrays you supply will override\n *   the buffers from srcBufferInfo.\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createAttribsFromArrays(gl, arrays) {\n  var attribs = {};\n  Object.keys(arrays).forEach(function (arrayName) {\n    if (!isIndices(arrayName)) {\n      var array = arrays[arrayName];\n      var attribName = array.attrib || array.name || array.attribName || defaults.attribPrefix + arrayName;\n\n      if (array.value) {\n        if (!Array.isArray(array.value) && !typedArrays.isArrayBuffer(array.value)) {\n          throw new Error('array.value is not array or typedarray');\n        }\n\n        attribs[attribName] = {\n          value: array.value\n        };\n      } else {\n        var buffer;\n        var type;\n        var normalization;\n        var numComponents;\n\n        if (array.buffer && array.buffer instanceof WebGLBuffer) {\n          buffer = array.buffer;\n          numComponents = array.numComponents || array.size;\n          type = array.type;\n          normalization = array.normalize;\n        } else if (typeof array === \"number\" || typeof array.data === \"number\") {\n          var numValues = array.data || array;\n          var arrayType = array.type || Float32Array;\n          var numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n          type = typedArrays.getGLTypeForTypedArrayType(arrayType);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n          numComponents = array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues);\n          buffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n          gl.bufferData(gl.ARRAY_BUFFER, numBytes, array.drawType || gl.STATIC_DRAW);\n        } else {\n          var typedArray = makeTypedArray(array, arrayName);\n          buffer = createBufferFromTypedArray(gl, typedArray, undefined, array.drawType);\n          type = typedArrays.getGLTypeForTypedArray(typedArray);\n          normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArray(typedArray);\n          numComponents = getNumComponents(array, arrayName);\n        }\n\n        attribs[attribName] = {\n          buffer: buffer,\n          numComponents: numComponents,\n          type: type,\n          normalize: normalization,\n          stride: array.stride || 0,\n          offset: array.offset || 0,\n          divisor: array.divisor === undefined ? undefined : array.divisor,\n          drawType: array.drawType\n        };\n      }\n    }\n  });\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  return attribs;\n}\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically upate the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably ineffient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\n\n\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n\n  if (offset !== undefined) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(gl.ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, gl.ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === gl.BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_BYTE) return 1; // eslint-disable-line\n\n  if (type === gl.SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_SHORT) return 2; // eslint-disable-line\n\n  if (type === gl.INT) return 4; // eslint-disable-line\n\n  if (type === gl.UNSIGNED_INT) return 4; // eslint-disable-line\n\n  if (type === gl.FLOAT) return 4; // eslint-disable-line\n\n  return 0;\n} // Tries to get the number of elements from a set of arrays.\n\n\nvar positionKeys = ['position', 'positions', 'a_position'];\n\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  var key;\n  var ii;\n\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n\n    if (key in arrays) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n\n  var array = arrays[key];\n  var length = getArray(array).length;\n  var numComponents = getNumComponents(array, key);\n  var numElements = length / numComponents;\n\n  if (length % numComponents > 0) {\n    throw new Error(\"numComponents \".concat(numComponents, \" not correct for length \").concat(length));\n  }\n\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  var key;\n  var ii;\n\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n\n    if (key in attribs) {\n      break;\n    }\n\n    key = defaults.attribPrefix + key;\n\n    if (key in attribs) {\n      break;\n    }\n  }\n\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n\n  var attrib = attribs[key];\n  gl.bindBuffer(gl.ARRAY_BUFFER, attrib.buffer);\n  var numBytes = gl.getBufferParameter(gl.ARRAY_BUFFER, gl.BUFFER_SIZE);\n  gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  var bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  var totalElements = numBytes / bytesPerValue;\n  var numComponents = attrib.numComponents || attrib.size; // TODO: check stride\n\n  var numElements = totalElements / numComponents;\n\n  if (numElements % 1 !== 0) {\n    throw new Error(\"numComponents \".concat(numComponents, \" not correct for length \").concat(length));\n  }\n\n  return numElements;\n}\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs approriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         a_position: { buffer: WebGLBuffer, numComponents: 3, },\n *         a_normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         a_texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also by TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or augmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         a_position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         a_texcoods: { numComponents: 2, buffer: gl.createBuffer(), },\n *         a_normals: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.a_normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @param {module:twgl.BufferInfo} [srcBufferInfo] An existing\n *        buffer info to start from. WebGLBuffers etc specified\n *        in the srcBufferInfo will be used in a new BufferInfo\n *        with any arrays specfied overriding the ones in\n *        srcBufferInfo.\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferInfoFromArrays(gl, arrays, srcBufferInfo) {\n  var newAttribs = createAttribsFromArrays(gl, arrays);\n  var bufferInfo = Object.assign({}, srcBufferInfo ? srcBufferInfo : {});\n  bufferInfo.attribs = Object.assign({}, srcBufferInfo ? srcBufferInfo.attribs : {}, newAttribs);\n  var indices = arrays.indices;\n\n  if (indices) {\n    var newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, gl.ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = typedArrays.getGLTypeForTypedArray(newIndices);\n  } else if (!bufferInfo.numElements) {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that constains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be dervied other wise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBufferFromArray(gl, array, arrayName) {\n  var type = arrayName === \"indices\" ? gl.ELEMENT_ARRAY_BUFFER : gl.ARRAY_BUFFER;\n  var typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\n\n\nfunction createBuffersFromArrays(gl, arrays) {\n  var buffers = {};\n  Object.keys(arrays).forEach(function (key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  }); // Ugh!\n\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = typedArrays.getGLTypeForTypedArray(makeTypedArray(arrays.indices), 'indices');\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\n/***/ }),\n\n/***/ \"./src/draw.js\":\n/*!*********************!*\\\n  !*** ./src/draw.js ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.drawBufferInfo = drawBufferInfo;\nexports.drawObjectList = drawObjectList;\n\nvar programs = _interopRequireWildcard(__webpack_require__(/*! ./programs.js */ \"./src/programs.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Drawing related functions\n *\n * For backward compatibily they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {number} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? gl.TRIANGLES : type;\n  var indices = bufferInfo.indices;\n  var elementType = bufferInfo.elementType;\n  var numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? gl.UNSIGNED_SHORT : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In otherwords `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElemnts`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\n\n\nfunction drawObjectList(gl, objectsToDraw) {\n  var lastUsedProgramInfo = null;\n  var lastUsedBufferInfo = null;\n  objectsToDraw.forEach(function (object) {\n    if (object.active === false) {\n      return;\n    }\n\n    var programInfo = object.programInfo;\n    var bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    var bindBuffers = false;\n    var type = object.type === undefined ? gl.TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program); // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n\n      bindBuffers = true;\n    } // Setup all the needed attributes.\n\n\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n\n      lastUsedBufferInfo = bufferInfo;\n      programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    } // Set the uniforms.\n\n\n    programs.setUniforms(programInfo, object.uniforms); // Draw\n\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\n/***/ }),\n\n/***/ \"./src/framebuffers.js\":\n/*!*****************************!*\\\n  !*** ./src/framebuffers.js ***!\n  \\*****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.bindFramebufferInfo = bindFramebufferInfo;\nexports.createFramebufferInfo = createFramebufferInfo;\nexports.resizeFramebufferInfo = resizeFramebufferInfo;\n\nvar textures = _interopRequireWildcard(__webpack_require__(/*! ./textures.js */ \"./src/textures.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Framebuffer related functions\n *\n * For backward compatibily they are available at both `twgl.framebuffer` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/framebuffers\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar UNSIGNED_BYTE = 0x1401;\n/* PixelFormat */\n\nvar DEPTH_COMPONENT = 0x1902;\nvar RGBA = 0x1908;\n/* Framebuffer Object. */\n\nvar RGBA4 = 0x8056;\nvar RGB5_A1 = 0x8057;\nvar RGB565 = 0x8D62;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar STENCIL_INDEX = 0x1901;\nvar STENCIL_INDEX8 = 0x8D48;\nvar DEPTH_STENCIL = 0x84F9;\nvar COLOR_ATTACHMENT0 = 0x8CE0;\nvar DEPTH_ATTACHMENT = 0x8D00;\nvar STENCIL_ATTACHMENT = 0x8D20;\nvar DEPTH_STENCIL_ATTACHMENT = 0x821A;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar CLAMP_TO_EDGE = 0x812F;\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\nvar LINEAR = 0x2601;\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attach] The attachment point. Defaults\n *   to `gl.COLOR_ATTACTMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {number} [layer] layer for `gl.framebufferTextureLayer`. Defaults to undefined.\n *   If set then `gl.framebufferTextureLayer` is called, if not then `gl.framebufferTexture2D`\n * @property {WebGLObject} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachemnts across framebuffers.\n * @memberOf module:twgl\n */\n\nvar defaultAttachments = [{\n  format: RGBA,\n  type: UNSIGNED_BYTE,\n  min: LINEAR,\n  wrap: CLAMP_TO_EDGE\n}, {\n  format: DEPTH_STENCIL\n}];\nvar attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16] = DEPTH_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format) {\n  return attachmentsByFormat[format];\n}\n\nvar renderbufferFormats = {};\nrenderbufferFormats[RGBA4] = true;\nrenderbufferFormats[RGB5_A1] = true;\nrenderbufferFormats[RGB565] = true;\nrenderbufferFormats[DEPTH_STENCIL] = true;\nrenderbufferFormats[DEPTH_COMPONENT16] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {WebGLObject[]} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL1 only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  var target = gl.FRAMEBUFFER;\n  var fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  var colorAttachmentCount = 0;\n  var framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height\n  };\n  attachments.forEach(function (attachmentOptions) {\n    var attachment = attachmentOptions.attachment;\n    var format = attachmentOptions.format;\n    var attachmentPoint = getAttachmentPointForFormat(format);\n\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + colorAttachmentCount++;\n    }\n\n    if (!attachment) {\n      if (isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n        gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n      } else {\n        var textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || gl.LINEAR;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || gl.LINEAR;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || gl.CLAMP_TO_EDGE;\n        }\n\n        attachment = textures.createTexture(gl, textureOptions);\n      }\n    }\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, gl.RENDERBUFFER, attachment);\n    } else if (helper.isTexture(gl, attachment)) {\n      if (attachmentOptions.layer !== undefined) {\n        gl.framebufferTextureLayer(target, attachmentPoint, attachment, attachmentOptions.level || 0, attachmentOptions.layer);\n      } else {\n        gl.framebufferTexture2D(target, attachmentPoint, attachmentOptions.texTarget || gl.TEXTURE_2D, attachment, attachmentOptions.level || 0);\n      }\n    } else {\n      throw new Error('unknown attachment type');\n    }\n\n    framebufferInfo.attachments.push(attachment);\n  });\n  return framebufferInfo;\n}\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Defautt = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width = width || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function (attachmentOptions, ndx) {\n    var attachment = framebufferInfo.attachments[ndx];\n    var format = attachmentOptions.format;\n\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(gl.RENDERBUFFER, attachment);\n      gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n    } else if (helper.isTexture(gl, attachment)) {\n      textures.resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw new Error('unknown attachment type');\n    }\n  });\n}\n/**\n * Binds a framebuffer\n *\n * This function pretty much soley exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If not passed will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || gl.FRAMEBUFFER;\n\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\n/***/ }),\n\n/***/ \"./src/helper.js\":\n/*!***********************!*\\\n  !*** ./src/helper.js ***!\n  \\***********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.copyExistingProperties = copyExistingProperties;\nexports.copyNamedProperties = copyNamedProperties;\nexports.isBuffer = isBuffer;\nexports.isRenderbuffer = isRenderbuffer;\nexports.isShader = isShader;\nexports.isTexture = isTexture;\nexports.isSampler = isSampler;\nexports.warn = exports.error = void 0;\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint no-console: \"off\" */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n * @private\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function (name) {\n    var value = src[name];\n\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n * @private\n */\n\n\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function (key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {\n      dst[key] = src[key];\n    }\n  });\n}\n\nvar error = typeof console !== 'undefined' && console.error && typeof console.error === \"function\" ? console.error.bind(console) : function () {};\nexports.error = error;\nvar warn = typeof console !== 'undefined' && console.warn && typeof console.warn === \"function\" ? console.warn.bind(console) : function () {};\nexports.warn = warn;\n\nfunction isBuffer(gl, t) {\n  return typeof WebGLBuffer !== 'undefined' && t instanceof WebGLBuffer;\n}\n\nfunction isRenderbuffer(gl, t) {\n  return typeof WebGLRenderbuffer !== 'undefined' && t instanceof WebGLRenderbuffer;\n}\n\nfunction isShader(gl, t) {\n  return typeof WebGLShader !== 'undefined' && t instanceof WebGLShader;\n}\n\nfunction isTexture(gl, t) {\n  return typeof WebGLTexture !== 'undefined' && t instanceof WebGLTexture;\n}\n\nfunction isSampler(gl, t) {\n  return typeof WebGLSampler !== 'undefined' && t instanceof WebGLSampler;\n}\n\n/***/ }),\n\n/***/ \"./src/m4.js\":\n/*!*******************!*\\\n  !*** ./src/m4.js ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.axisRotate = axisRotate;\nexports.axisRotation = axisRotation;\nexports.copy = copy;\nexports.frustum = frustum;\nexports.getAxis = getAxis;\nexports.getTranslation = getTranslation;\nexports.identity = identity;\nexports.inverse = inverse;\nexports.lookAt = lookAt;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.ortho = ortho;\nexports.perspective = perspective;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.rotationX = rotationX;\nexports.rotationY = rotationY;\nexports.rotationZ = rotationZ;\nexports.scale = scale;\nexports.scaling = scaling;\nexports.setAxis = setAxis;\nexports.setDefaultType = setDefaultType;\nexports.setTranslation = setTranslation;\nexports.transformDirection = transformDirection;\nexports.transformNormal = transformNormal;\nexports.transformPoint = transformPoint;\nexports.translate = translate;\nexports.translation = translation;\nexports.transpose = transpose;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(/*! ./v3.js */ \"./src/v3.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nvar MatType = Float32Array;\nvar tempV3a = v3.create();\nvar tempV3b = v3.create();\nvar tempV3c = v3.create();\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n * @memberOf module:twgl/m4\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction negate(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = -m[0];\n  dst[1] = -m[1];\n  dst[2] = -m[2];\n  dst[3] = -m[3];\n  dst[4] = -m[4];\n  dst[5] = -m[5];\n  dst[6] = -m[6];\n  dst[7] = -m[7];\n  dst[8] = -m[8];\n  dst[9] = -m[9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n  return dst;\n}\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction copy(m, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = m[0];\n  dst[1] = m[1];\n  dst[2] = m[2];\n  dst[3] = m[3];\n  dst[4] = m[4];\n  dst[5] = m[5];\n  dst[6] = m[6];\n  dst[7] = m[7];\n  dst[8] = m[8];\n  dst[9] = m[9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n  return dst;\n}\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transpose(m, dst) {\n  dst = dst || new MatType(16);\n\n  if (dst === m) {\n    var t;\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  dst[0] = m00;\n  dst[1] = m10;\n  dst[2] = m20;\n  dst[3] = m30;\n  dst[4] = m01;\n  dst[5] = m11;\n  dst[6] = m21;\n  dst[7] = m31;\n  dst[8] = m02;\n  dst[9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n  return dst;\n}\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n  var tmp_0 = m22 * m33;\n  var tmp_1 = m32 * m23;\n  var tmp_2 = m12 * m33;\n  var tmp_3 = m32 * m13;\n  var tmp_4 = m12 * m23;\n  var tmp_5 = m22 * m13;\n  var tmp_6 = m02 * m33;\n  var tmp_7 = m32 * m03;\n  var tmp_8 = m02 * m23;\n  var tmp_9 = m22 * m03;\n  var tmp_10 = m02 * m13;\n  var tmp_11 = m12 * m03;\n  var tmp_12 = m20 * m31;\n  var tmp_13 = m30 * m21;\n  var tmp_14 = m10 * m31;\n  var tmp_15 = m30 * m11;\n  var tmp_16 = m10 * m21;\n  var tmp_17 = m20 * m11;\n  var tmp_18 = m00 * m31;\n  var tmp_19 = m30 * m01;\n  var tmp_20 = m00 * m21;\n  var tmp_21 = m20 * m01;\n  var tmp_22 = m00 * m11;\n  var tmp_23 = m10 * m01;\n  var t0 = tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31 - (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  var t1 = tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31 - (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  var t2 = tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31 - (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  var t3 = tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21 - (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n  var d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n  dst[0] = d * t0;\n  dst[1] = d * t1;\n  dst[2] = d * t2;\n  dst[3] = d * t3;\n  dst[4] = d * (tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30 - (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[5] = d * (tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30 - (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[6] = d * (tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30 - (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[7] = d * (tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20 - (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[8] = d * (tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33 - (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[9] = d * (tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33 - (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * (tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33 - (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * (tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23 - (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * (tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12 - (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * (tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22 - (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * (tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02 - (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * (tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12 - (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n  return dst;\n}\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new MatType(16);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4 + 0];\n  var a11 = a[4 + 1];\n  var a12 = a[4 + 2];\n  var a13 = a[4 + 3];\n  var a20 = a[8 + 0];\n  var a21 = a[8 + 1];\n  var a22 = a[8 + 2];\n  var a23 = a[8 + 3];\n  var a30 = a[12 + 0];\n  var a31 = a[12 + 1];\n  var a32 = a[12 + 2];\n  var a33 = a[12 + 3];\n  var b00 = b[0];\n  var b01 = b[1];\n  var b02 = b[2];\n  var b03 = b[3];\n  var b10 = b[4 + 0];\n  var b11 = b[4 + 1];\n  var b12 = b[4 + 2];\n  var b13 = b[4 + 3];\n  var b20 = b[8 + 0];\n  var b21 = b[8 + 1];\n  var b22 = b[8 + 2];\n  var b23 = b[8 + 3];\n  var b30 = b[12 + 0];\n  var b31 = b[12 + 1];\n  var b32 = b[12 + 2];\n  var b33 = b[12 + 3];\n  dst[0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n  return dst;\n}\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none, a new one is created.\n * @return {module:twgl/m4.Mat4} a once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n\n  if (a !== dst) {\n    dst[0] = a[0];\n    dst[1] = a[1];\n    dst[2] = a[2];\n    dst[3] = a[3];\n    dst[4] = a[4];\n    dst[5] = a[5];\n    dst[6] = a[6];\n    dst[7] = a[7];\n    dst[8] = a[8];\n    dst[9] = a[9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} [dst] vector.\n * @return {module:twgl/v3.Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getTranslation(m, dst) {\n  dst = dst || v3.create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {module:twgl/v3.Vec3} [dst] vector.\n * @return {module:twgl/v3.Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\n\n\nfunction getAxis(m, axis, dst) {\n  dst = dst || v3.create();\n  var off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/v3.Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If none, a new one is created.\n * @return {module:twgl/m4.Mat4} dst\n * @memberOf module:twgl/m4\n */\n\n\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy(a, dst);\n  }\n\n  var off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n  var f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  var rangeInv = 1.0 / (zNear - zFar);\n  dst[0] = f / aspect;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = f;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 othogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 2 / (right - left);\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 / (top - bottom);\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n  var dx = right - left;\n  var dy = top - bottom;\n  var dz = near - far;\n  dst[0] = 2 * near / dx;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 2 * near / dy;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = (left + right) / dx;\n  dst[9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n  return dst;\n}\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {module:twgl/v3.Vec3} eye The position of the eye.\n * @param {module:twgl/v3.Vec3} target The position meant to be viewed.\n * @param {module:twgl/v3.Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n  var xAxis = tempV3a;\n  var yAxis = tempV3b;\n  var zAxis = tempV3c;\n  v3.normalize(v3.subtract(eye, target, zAxis), zAxis);\n  v3.normalize(v3.cross(up, zAxis, xAxis), xAxis);\n  v3.normalize(v3.cross(zAxis, xAxis, yAxis), yAxis);\n  dst[0] = xAxis[0];\n  dst[1] = xAxis[1];\n  dst[2] = xAxis[2];\n  dst[3] = 0;\n  dst[4] = yAxis[0];\n  dst[5] = yAxis[1];\n  dst[6] = yAxis[2];\n  dst[7] = 0;\n  dst[8] = zAxis[0];\n  dst[9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by translation by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var m30 = m[3 * 4 + 0];\n  var m31 = m[3 * 4 + 1];\n  var m32 = m[3 * 4 + 2];\n  var m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[0] = m00;\n    dst[1] = m01;\n    dst[2] = m02;\n    dst[3] = m03;\n    dst[4] = m10;\n    dst[5] = m11;\n    dst[6] = m12;\n    dst[7] = m13;\n    dst[8] = m20;\n    dst[9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = 1;\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = c;\n  dst[6] = s;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[4] = c * m10 + s * m20;\n  dst[5] = c * m11 + s * m21;\n  dst[6] = c * m12 + s * m22;\n  dst[7] = c * m13 + s * m23;\n  dst[8] = c * m20 - s * m10;\n  dst[9] = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[0] = m[0];\n    dst[1] = m[1];\n    dst[2] = m[2];\n    dst[3] = m[3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = 0;\n  dst[2] = -s;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = 1;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = s;\n  dst[9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m20 = m[2 * 4 + 0];\n  var m21 = m[2 * 4 + 1];\n  var m22 = m[2 * 4 + 2];\n  var m23 = m[2 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 - s * m20;\n  dst[1] = c * m01 - s * m21;\n  dst[2] = c * m02 - s * m22;\n  dst[3] = c * m03 - s * m23;\n  dst[8] = c * m20 + s * m00;\n  dst[9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[4] = m[4];\n    dst[5] = m[5];\n    dst[6] = m[6];\n    dst[7] = m[7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c;\n  dst[1] = s;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = -s;\n  dst[5] = c;\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by a rotation around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var m00 = m[0 * 4 + 0];\n  var m01 = m[0 * 4 + 1];\n  var m02 = m[0 * 4 + 2];\n  var m03 = m[0 * 4 + 3];\n  var m10 = m[1 * 4 + 0];\n  var m11 = m[1 * 4 + 1];\n  var m12 = m[1 * 4 + 2];\n  var m13 = m[1 * 4 + 3];\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  dst[0] = c * m00 + s * m10;\n  dst[1] = c * m01 + s * m11;\n  dst[2] = c * m02 + s * m12;\n  dst[3] = c * m03 + s * m13;\n  dst[4] = c * m10 - s * m00;\n  dst[5] = c * m11 - s * m01;\n  dst[6] = c * m12 - s * m02;\n  dst[7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[8] = m[8];\n    dst[9] = m[9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  dst[0] = xx + (1 - xx) * c;\n  dst[1] = x * y * oneMinusCosine + z * s;\n  dst[2] = x * z * oneMinusCosine - y * s;\n  dst[3] = 0;\n  dst[4] = x * y * oneMinusCosine - z * s;\n  dst[5] = yy + (1 - yy) * c;\n  dst[6] = y * z * oneMinusCosine + x * s;\n  dst[7] = 0;\n  dst[8] = x * z * oneMinusCosine + y * s;\n  dst[9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix by rotation around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n  var x = axis[0];\n  var y = axis[1];\n  var z = axis[2];\n  var n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  var xx = x * x;\n  var yy = y * y;\n  var zz = z * z;\n  var c = Math.cos(angleInRadians);\n  var s = Math.sin(angleInRadians);\n  var oneMinusCosine = 1 - c;\n  var r00 = xx + (1 - xx) * c;\n  var r01 = x * y * oneMinusCosine + z * s;\n  var r02 = x * z * oneMinusCosine - y * s;\n  var r10 = x * y * oneMinusCosine - z * s;\n  var r11 = yy + (1 - yy) * c;\n  var r12 = y * z * oneMinusCosine + x * s;\n  var r20 = x * z * oneMinusCosine + y * s;\n  var r21 = y * z * oneMinusCosine - x * s;\n  var r22 = zz + (1 - zz) * c;\n  var m00 = m[0];\n  var m01 = m[1];\n  var m02 = m[2];\n  var m03 = m[3];\n  var m10 = m[4];\n  var m11 = m[5];\n  var m12 = m[6];\n  var m13 = m[7];\n  var m20 = m[8];\n  var m21 = m[9];\n  var m22 = m[10];\n  var m23 = m[11];\n  dst[0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {module:twgl/v3.Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n  dst[0] = v[0];\n  dst[1] = 0;\n  dst[2] = 0;\n  dst[3] = 0;\n  dst[4] = 0;\n  dst[5] = v[1];\n  dst[6] = 0;\n  dst[7] = 0;\n  dst[8] = 0;\n  dst[9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n  return dst;\n}\n/**\n * Modifies the given 4-by-4 matrix, scaling in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {module:twgl/v3.Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If none new one is created..\n * @return {module:twgl/m4.Mat4} m once modified.\n * @memberOf module:twgl/m4\n */\n\n\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2];\n  dst[3] = v0 * m[0 * 4 + 3];\n  dst[4] = v1 * m[1 * 4 + 0];\n  dst[5] = v1 * m[1 * 4 + 1];\n  dst[6] = v1 * m[1 * 4 + 2];\n  dst[7] = v1 * m[1 * 4 + 3];\n  dst[8] = v2 * m[2 * 4 + 0];\n  dst[9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The point.\n * @param {module:twgl/v3.Vec3} [dst] optional vec3 to store result\n * @return {module:twgl/v3.Vec3} dst or new vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformPoint(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  var d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The direction.\n * @param {module:twgl/v3.Vec3} [dst] optional Vec3 to store result\n * @return {module:twgl/v3.Vec3} dst or new Vec3 if not provided\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformDirection(m, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n  return dst;\n}\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The normal.\n * @param {module:twgl/v3.Vec3} [dst] The direction.\n * @return {module:twgl/v3.Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\n\n\nfunction transformNormal(m, v, dst) {\n  dst = dst || v3.create();\n  var mi = inverse(m);\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n\n/***/ }),\n\n/***/ \"./src/primitives.js\":\n/*!***************************!*\\\n  !*** ./src/primitives.js ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.create3DFVertices = create3DFVertices;\nexports.createAugmentedTypedArray = createAugmentedTypedArray;\nexports.createCubeVertices = createCubeVertices;\nexports.createPlaneVertices = createPlaneVertices;\nexports.createSphereVertices = createSphereVertices;\nexports.createTruncatedConeVertices = createTruncatedConeVertices;\nexports.createXYQuadVertices = createXYQuadVertices;\nexports.createCresentVertices = createCresentVertices;\nexports.createCylinderVertices = createCylinderVertices;\nexports.createTorusVertices = createTorusVertices;\nexports.createDiscVertices = createDiscVertices;\nexports.deindexVertices = deindexVertices;\nexports.flattenNormals = flattenNormals;\nexports.makeRandomVertexColors = makeRandomVertexColors;\nexports.reorientDirections = reorientDirections;\nexports.reorientNormals = reorientNormals;\nexports.reorientPositions = reorientPositions;\nexports.reorientVertices = reorientVertices;\nexports.concatVertices = concatVertices;\nexports.duplicateVertices = duplicateVertices;\nexports.createDiscBuffers = exports.createDiscBufferInfo = exports.createTorusBuffers = exports.createTorusBufferInfo = exports.createCylinderBuffers = exports.createCylinderBufferInfo = exports.createCresentBuffers = exports.createCresentBufferInfo = exports.createXYQuadBuffers = exports.createXYQuadBufferInfo = exports.createTruncatedConeBuffers = exports.createTruncatedConeBufferInfo = exports.createSphereBuffers = exports.createSphereBufferInfo = exports.createPlaneBuffers = exports.createPlaneBufferInfo = exports.createCubeBuffers = exports.createCubeBufferInfo = exports.create3DFBuffers = exports.create3DFBufferInfo = void 0;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(/*! ./attributes.js */ \"./src/attributes.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(/*! ./typedarrays.js */ \"./src/typedarrays.js\"));\n\nvar m4 = _interopRequireWildcard(__webpack_require__(/*! ./m4.js */ \"./src/m4.js\"));\n\nvar v3 = _interopRequireWildcard(__webpack_require__(/*! ./v3.js */ \"./src/v3.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Various functions to make simple primitives\n *\n * note: Most primitive functions come in 3 styles\n *\n * *  `createSomeShapeBufferInfo`\n *\n *    These functions are almost always the functions you want to call. They\n *    create vertices then make WebGLBuffers and create {@link module:twgl.AttribInfo}s\n *    returing a {@link module:twgl.BufferInfo} you can pass to {@link module:twgl.setBuffersAndAttributes}\n *    and {@link module:twgl.drawBufferInfo} etc...\n *\n * *  `createSomeShapeBuffers`\n *\n *    These create WebGLBuffers and put your data in them but nothing else.\n *    It's a shortcut to doing it yourself if you don't want to use\n *    the higher level functions.\n *\n * *  `createSomeShapeVertices`\n *\n *    These just create vertices, no buffers. This allows you to manipulate the vertices\n *    or add more data before generating a {@link module:twgl.BufferInfo}. Once you're finished\n *    manipulating the vertices call {@link module:twgl.createBufferInfoFromArrays}.\n *\n *    example:\n *\n *        const arrays = twgl.primitives.createPlaneArrays(1);\n *        twgl.primitives.reorientVertices(arrays, m4.rotationX(Math.PI * 0.5));\n *        const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n * @module twgl/primitives\n */\nvar getArray = attributes.getArray_; // eslint-disable-line\n\nvar getNumComponents = attributes.getNumComponents_; // eslint-disable-line\n\n/**\n * @typedef {(Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array)} TypedArray\n */\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n * @private\n */\n\nfunction augmentTypedArray(typedArray, numComponents) {\n  var cursor = 0;\n\n  typedArray.push = function () {\n    for (var ii = 0; ii < arguments.length; ++ii) {\n      var value = arguments[ii];\n\n      if (value instanceof Array || typedArrays.isArrayBuffer(value)) {\n        for (var jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n\n  typedArray.reset = function (opt_index) {\n    cursor = opt_index || 0;\n  };\n\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function get() {\n      return this.length / this.numComponents | 0;\n    }\n  });\n  return typedArray;\n}\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  var Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n/**\n * Given indexed vertices creates a new set of vertices unindexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction deindexVertices(vertices) {\n  var indices = vertices.indices;\n  var newVertices = {};\n  var numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    var srcBuffer = vertices[channel];\n    var numComponents = srcBuffer.numComponents;\n    var dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n\n    for (var ii = 0; ii < numElements; ++ii) {\n      var ndx = indices[ii];\n      var offset = ndx * numComponents;\n\n      for (var jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n  return newVertices;\n}\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\n\n\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw new Error('can not flatten normals of indexed vertices. deindex them first');\n  }\n\n  var normals = vertices.normal;\n  var numNormals = normals.length;\n\n  for (var ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    var nax = normals[ii + 0];\n    var nay = normals[ii + 1];\n    var naz = normals[ii + 2];\n    var nbx = normals[ii + 3];\n    var nby = normals[ii + 4];\n    var nbz = normals[ii + 5];\n    var ncx = normals[ii + 6];\n    var ncy = normals[ii + 7];\n    var ncz = normals[ii + 8]; // add them\n\n    var nx = nax + nbx + ncx;\n    var ny = nay + nby + ncy;\n    var nz = naz + nbz + ncz; // normalize them\n\n    var length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n    nx /= length;\n    ny /= length;\n    nz /= length; // copy them back in\n\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  var len = array.length;\n  var tmp = new Float32Array(3);\n\n  for (var ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal(mi, v, dst) {\n  dst = dst || v3.create();\n  var v0 = v[0];\n  var v1 = v[1];\n  var v2 = v[2];\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n  return dst;\n}\n/**\n * Reorients directions by the given matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformDirection);\n  return array;\n}\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, m4.inverse(matrix), transformNormal);\n  return array;\n}\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformPoint);\n  return array;\n}\n/**\n * @typedef {(number[]|TypedArray)} NativeArrayOrTypedArray\n */\n\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, NativeArrayOrTypedArray>} arrays The vertices to reorient\n * @param {module:twgl/m4.Mat4} matrix matrix to reorient by.\n * @return {Object.<string, NativeArrayOrTypedArray>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function (name) {\n    var array = arrays[name];\n\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray>} the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [xOffset + -1 * size, yOffset + -1 * size, xOffset + 1 * size, yOffset + -1 * size, xOffset + -1 * size, yOffset + 1 * size, xOffset + 1 * size, yOffset + 1 * size]\n    },\n    normal: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n    texcoord: [0, 0, 1, 0, 0, 1, 1, 1],\n    indices: [0, 1, 2, 2, 1, 3]\n  };\n}\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createPlaneVertices(width, depth, subdivisionsWidth, subdivisionsDepth, matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || m4.identity();\n  var numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (var z = 0; z <= subdivisionsDepth; z++) {\n    for (var x = 0; x <= subdivisionsWidth; x++) {\n      var u = x / subdivisionsWidth;\n      var v = z / subdivisionsDepth;\n      positions.push(width * u - width * 0.5, 0, depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  var numVertsAcross = subdivisionsWidth + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (var _z = 0; _z < subdivisionsDepth; _z++) {\n    // eslint-disable-line\n    for (var _x = 0; _x < subdivisionsWidth; _x++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_z + 0) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x, (_z + 0) * numVertsAcross + _x + 1); // Make triangle 2 of quad.\n\n      indices.push((_z + 1) * numVertsAcross + _x, (_z + 1) * numVertsAcross + _x + 1, (_z + 0) * numVertsAcross + _x + 1);\n    }\n  }\n\n  var arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  }, matrix);\n  return arrays;\n}\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createSphereVertices(radius, subdivisionsAxis, subdivisionsHeight, opt_startLatitudeInRadians, opt_endLatitudeInRadians, opt_startLongitudeInRadians, opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw new Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || Math.PI * 2;\n  var latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  var longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians; // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n\n  var numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices); // Generate the individual vertices in our vertex buffer.\n\n  for (var y = 0; y <= subdivisionsHeight; y++) {\n    for (var x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      var u = x / subdivisionsAxis;\n      var v = y / subdivisionsHeight;\n      var theta = longRange * u + opt_startLongitudeInRadians;\n      var phi = latRange * v + opt_startLatitudeInRadians;\n      var sinTheta = Math.sin(theta);\n      var cosTheta = Math.cos(theta);\n      var sinPhi = Math.sin(phi);\n      var cosPhi = Math.cos(phi);\n      var ux = cosTheta * sinPhi;\n      var uy = cosPhi;\n      var uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  var numVertsAround = subdivisionsAxis + 1;\n  var indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n\n  for (var _x2 = 0; _x2 < subdivisionsAxis; _x2++) {\n    // eslint-disable-line\n    for (var _y = 0; _y < subdivisionsHeight; _y++) {\n      // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push((_y + 0) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2); // Make triangle 2 of quad.\n\n      indices.push((_y + 1) * numVertsAround + _x2, (_y + 0) * numVertsAround + _x2 + 1, (_y + 1) * numVertsAround + _x2 + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n * @private\n */\n\n\nvar CUBE_FACE_INDICES = [[3, 7, 5, 1], // right\n[6, 2, 0, 4], // left\n[6, 7, 3, 2], // ??\n[0, 1, 5, 4], // ??\n[7, 6, 4, 5], // front\n[2, 3, 1, 0]];\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\nfunction createCubeVertices(size) {\n  size = size || 1;\n  var k = size / 2;\n  var cornerVertices = [[-k, -k, -k], [+k, -k, -k], [-k, +k, -k], [+k, +k, -k], [-k, -k, +k], [+k, -k, +k], [-k, +k, +k], [+k, +k, +k]];\n  var faceNormals = [[+1, +0, +0], [-1, +0, +0], [+0, +1, +0], [+0, -1, +0], [+0, +0, +1], [+0, +0, -1]];\n  var uvCoords = [[1, 0], [0, 0], [0, 1], [1, 1]];\n  var numVertices = 6 * 4;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (var f = 0; f < 6; ++f) {\n    var faceIndices = CUBE_FACE_INDICES[f];\n\n    for (var v = 0; v < 4; ++v) {\n      var position = cornerVertices[faceIndices[v]];\n      var normal = faceNormals[f];\n      var uv = uvCoords[v]; // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n    } // Two triangles make a square face.\n\n\n    var offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTruncatedConeVertices(bottomRadius, topRadius, height, radialSubdivisions, verticalSubdivisions, opt_topCap, opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw new Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  var topCap = opt_topCap === undefined ? true : opt_topCap;\n  var bottomCap = opt_bottomCap === undefined ? true : opt_bottomCap;\n  var extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n  var numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra) * 2, Uint16Array);\n  var vertsAroundEdge = radialSubdivisions + 1; // The slant of the cone is constant across its surface\n\n  var slant = Math.atan2(bottomRadius - topRadius, height);\n  var cosSlant = Math.cos(slant);\n  var sinSlant = Math.sin(slant);\n  var start = topCap ? -2 : 0;\n  var end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (var yy = start; yy <= end; ++yy) {\n    var v = yy / verticalSubdivisions;\n    var y = height * v;\n    var ringRadius = void 0;\n\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius + (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n\n    y -= height / 2;\n\n    for (var ii = 0; ii < vertsAroundEdge; ++ii) {\n      var sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      var cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      normals.push(yy < 0 || yy > verticalSubdivisions ? 0 : sin * cosSlant, yy < 0 ? -1 : yy > verticalSubdivisions ? 1 : sinSlant, yy < 0 || yy > verticalSubdivisions ? 0 : cos * cosSlant);\n      texcoords.push(ii / radialSubdivisions, 1 - v);\n    }\n  }\n\n  for (var _yy = 0; _yy < verticalSubdivisions + extra; ++_yy) {\n    // eslint-disable-line\n    for (var _ii = 0; _ii < radialSubdivisions; ++_ii) {\n      // eslint-disable-line\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 0) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii);\n      indices.push(vertsAroundEdge * (_yy + 0) + 0 + _ii, vertsAroundEdge * (_yy + 1) + 1 + _ii, vertsAroundEdge * (_yy + 1) + 0 + _ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n * @private\n */\n\n\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  var data = [];\n\n  for (var ii = 0; ii < rleData.length; ii += 4) {\n    var runLength = rleData[ii];\n    var element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n\n    for (var jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n\n  return data;\n}\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction create3DFVertices() {\n  var positions = [// left column front\n  0, 0, 0, 0, 150, 0, 30, 0, 0, 0, 150, 0, 30, 150, 0, 30, 0, 0, // top rung front\n  30, 0, 0, 30, 30, 0, 100, 0, 0, 30, 30, 0, 100, 30, 0, 100, 0, 0, // middle rung front\n  30, 60, 0, 30, 90, 0, 67, 60, 0, 30, 90, 0, 67, 90, 0, 67, 60, 0, // left column back\n  0, 0, 30, 30, 0, 30, 0, 150, 30, 0, 150, 30, 30, 0, 30, 30, 150, 30, // top rung back\n  30, 0, 30, 100, 0, 30, 30, 30, 30, 30, 30, 30, 100, 0, 30, 100, 30, 30, // middle rung back\n  30, 60, 30, 67, 60, 30, 30, 90, 30, 30, 90, 30, 67, 60, 30, 67, 90, 30, // top\n  0, 0, 0, 100, 0, 0, 100, 0, 30, 0, 0, 0, 100, 0, 30, 0, 0, 30, // top rung front\n  100, 0, 0, 100, 30, 0, 100, 30, 30, 100, 0, 0, 100, 30, 30, 100, 0, 30, // under top rung\n  30, 30, 0, 30, 30, 30, 100, 30, 30, 30, 30, 0, 100, 30, 30, 100, 30, 0, // between top rung and middle\n  30, 30, 0, 30, 60, 30, 30, 30, 30, 30, 30, 0, 30, 60, 0, 30, 60, 30, // top of middle rung\n  30, 60, 0, 67, 60, 30, 30, 60, 30, 30, 60, 0, 67, 60, 0, 67, 60, 30, // front of middle rung\n  67, 60, 0, 67, 90, 30, 67, 60, 30, 67, 60, 0, 67, 90, 0, 67, 90, 30, // bottom of middle rung.\n  30, 90, 0, 30, 90, 30, 67, 90, 30, 30, 90, 0, 67, 90, 30, 67, 90, 0, // front of bottom\n  30, 90, 0, 30, 150, 30, 30, 90, 30, 30, 90, 0, 30, 150, 0, 30, 150, 30, // bottom\n  0, 150, 0, 0, 150, 30, 30, 150, 30, 0, 150, 0, 30, 150, 30, 30, 150, 0, // left side\n  0, 0, 0, 0, 0, 30, 0, 150, 30, 0, 0, 0, 0, 150, 30, 0, 150, 0];\n  var texcoords = [// left column front\n  0.22, 0.19, 0.22, 0.79, 0.34, 0.19, 0.22, 0.79, 0.34, 0.79, 0.34, 0.19, // top rung front\n  0.34, 0.19, 0.34, 0.31, 0.62, 0.19, 0.34, 0.31, 0.62, 0.31, 0.62, 0.19, // middle rung front\n  0.34, 0.43, 0.34, 0.55, 0.49, 0.43, 0.34, 0.55, 0.49, 0.55, 0.49, 0.43, // left column back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // middle rung back\n  0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, // top\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // top rung front\n  0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, // under top rung\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // between top rung and middle\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // top of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // front of middle rung\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom of middle rung.\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // front of bottom\n  0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, // bottom\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, // left side\n  0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0];\n  var normals = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 0, 0, 1, // left column back\n  // top rung back\n  // middle rung back\n  18, 0, 0, -1, // top\n  6, 0, 1, 0, // top rung front\n  6, 1, 0, 0, // under top rung\n  6, 0, -1, 0, // between top rung and middle\n  6, 1, 0, 0, // top of middle rung\n  6, 0, 1, 0, // front of middle rung\n  6, 1, 0, 0, // bottom of middle rung.\n  6, 0, -1, 0, // front of bottom\n  6, 1, 0, 0, // bottom\n  6, 0, -1, 0, // left side\n  6, -1, 0, 0]);\n  var colors = expandRLEData([// left column front\n  // top rung front\n  // middle rung front\n  18, 200, 70, 120, // left column back\n  // top rung back\n  // middle rung back\n  18, 80, 70, 200, // top\n  6, 70, 200, 210, // top rung front\n  6, 200, 200, 70, // under top rung\n  6, 210, 100, 70, // between top rung and middle\n  6, 210, 160, 70, // top of middle rung\n  6, 70, 180, 210, // front of middle rung\n  6, 100, 70, 210, // bottom of middle rung.\n  6, 76, 210, 100, // front of bottom\n  6, 140, 210, 80, // bottom\n  6, 90, 130, 110, // left side\n  6, 160, 160, 220], [255]);\n  var numVerts = positions.length / 3;\n  var arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2, numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array)\n  };\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (var ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n/**\n * Creates cresent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates cresent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates cresent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the cresent.\n * @param {number} outerRadius The outer radius of the cresent.\n * @param {number} innerRadius The inner radius of the cresent.\n * @param {number} thickness The thickness of the cresent.\n * @param {number} subdivisionsDown number of steps around the cresent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCresentVertices(verticalRadius, outerRadius, innerRadius, thickness, subdivisionsDown, startOffset, endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw new Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset = endOffset || 1;\n  var subdivisionsThick = 2;\n  var offsetRange = endOffset - startOffset;\n  var numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (var z = 0; z <= subdivisionsDown; z++) {\n      var uBack = x / (subdivisionsThick - 1);\n      var v = z / subdivisionsDown;\n      var xBack = (uBack - 0.5) * 2;\n      var angle = (startOffset + v * offsetRange) * Math.PI;\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      var radius = lerp(verticalRadius, arcRadius, s);\n      var px = xBack * thickness;\n      var py = c * verticalRadius;\n      var pz = s * radius;\n      positions.push(px, py, pz);\n      var n = v3.add(v3.multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  } // Generate the individual vertices in our vertex buffer.\n\n\n  for (var x = 0; x < subdivisionsThick; x++) {\n    var uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0, 0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  } // Do outer surface.\n\n\n  var indices = createAugmentedTypedArray(3, subdivisionsDown * 2 * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (var z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(leftArcOffset + z + 0, leftArcOffset + z + 1, rightArcOffset + z + 0); // Make triangle 2 of quad.\n\n      indices.push(leftArcOffset + z + 1, rightArcOffset + z + 1, rightArcOffset + z + 0);\n    }\n  }\n\n  var numVerticesDown = subdivisionsDown + 1; // front\n\n  createSurface(numVerticesDown * 0, numVerticesDown * 4); // right\n\n  createSurface(numVerticesDown * 5, numVerticesDown * 7); // back\n\n  createSurface(numVerticesDown * 6, numVerticesDown * 2); // left\n\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n/**\n * Creates cylinder buffers. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCylinderBuffers\n */\n\n/**\n * Creates cylinder vertices. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createCylinderVertices(radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap) {\n  return createTruncatedConeVertices(radius, radius, height, radialSubdivisions, verticalSubdivisions, topCap, bottomCap);\n}\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createTorusVertices(radius, thickness, radialSubdivisions, bodySubdivisions, startAngle, endAngle) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw new Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  var range = endAngle - startAngle;\n  var radialParts = radialSubdivisions + 1;\n  var bodyParts = bodySubdivisions + 1;\n  var numVertices = radialParts * bodyParts;\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, radialSubdivisions * bodySubdivisions * 2, Uint16Array);\n\n  for (var slice = 0; slice < bodyParts; ++slice) {\n    var v = slice / bodySubdivisions;\n    var sliceAngle = v * Math.PI * 2;\n    var sliceSin = Math.sin(sliceAngle);\n    var ringRadius = radius + sliceSin * thickness;\n    var ny = Math.cos(sliceAngle);\n    var y = ny * thickness;\n\n    for (var ring = 0; ring < radialParts; ++ring) {\n      var u = ring / radialSubdivisions;\n      var ringAngle = startAngle + u * range;\n      var xSin = Math.sin(ringAngle);\n      var zCos = Math.cos(ringAngle);\n      var x = xSin * ringRadius;\n      var z = zCos * ringRadius;\n      var nx = xSin * sliceSin;\n      var nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (var _slice = 0; _slice < bodySubdivisions; ++_slice) {\n    // eslint-disable-line\n    for (var _ring = 0; _ring < radialSubdivisions; ++_ring) {\n      // eslint-disable-line\n      var nextRingIndex = 1 + _ring;\n      var nextSliceIndex = 1 + _slice;\n      indices.push(radialParts * _slice + _ring, radialParts * nextSliceIndex + _ring, radialParts * _slice + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + _ring, radialParts * nextSliceIndex + nextRingIndex, radialParts * _slice + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose ouside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction createDiscVertices(radius, divisions, stacks, innerRadius, stackPower) {\n  if (divisions < 3) {\n    throw new Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0; // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n\n  var numVertices = (divisions + 1) * (stacks + 1);\n  var positions = createAugmentedTypedArray(3, numVertices);\n  var normals = createAugmentedTypedArray(3, numVertices);\n  var texcoords = createAugmentedTypedArray(2, numVertices);\n  var indices = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n  var firstIndex = 0;\n  var radiusSpan = radius - innerRadius;\n  var pointsPerStack = divisions + 1; // Build the disk one stack at a time.\n\n  for (var stack = 0; stack <= stacks; ++stack) {\n    var stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (var i = 0; i <= divisions; ++i) {\n      var theta = 2.0 * Math.PI * i / divisions;\n      var x = stackRadius * Math.cos(theta);\n      var z = stackRadius * Math.sin(theta);\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - i / divisions, stack / stacks);\n\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        var a = firstIndex + (i + 1);\n        var b = firstIndex + i;\n        var c = firstIndex + i - pointsPerStack;\n        var d = firstIndex + (i + 1) - pointsPerStack; // Make a quad of the vertices a, b, c, d.\n\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices\n  };\n}\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n * @private\n */\n\n\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, AugmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, AugmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  var numElements = vertices.position.numElements;\n  var vcolors = createAugmentedTypedArray(4, numElements, Uint8Array);\n\n  var rand = options.rand || function (ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n\n  vertices.color = vcolors;\n\n  if (vertices.indices) {\n    // just make random colors if index\n    for (var ii = 0; ii < numElements; ++ii) {\n      vcolors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    var numVertsPerColor = options.vertsPerColor || 3;\n    var numSets = numElements / numVertsPerColor;\n\n    for (var _ii2 = 0; _ii2 < numSets; ++_ii2) {\n      // eslint-disable-line\n      var color = [rand(_ii2, 0), rand(_ii2, 1), rand(_ii2, 2), rand(_ii2, 3)];\n\n      for (var jj = 0; jj < numVertsPerColor; ++jj) {\n        vcolors.push(color);\n      }\n    }\n  }\n\n  return vertices;\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n * @private\n */\n\n\nfunction createBufferFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBuffersFromArrays(gl, arrays);\n  };\n}\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n * @private\n */\n\n\nfunction createBufferInfoFunc(fn) {\n  return function (gl) {\n    var arrays = fn.apply(null, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nvar arraySpecPropertyNames = [\"numComponents\", \"size\", \"type\", \"normalize\", \"stride\", \"offset\", \"attrib\", \"name\", \"attribName\"];\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n * @private\n */\n\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  var length = src.length;\n\n  for (var ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n * @private\n */\n\n\nfunction createArrayOfSameType(srcArray, length) {\n  var arraySrc = getArray(srcArray);\n  var newArray = new arraySrc.constructor(length);\n  var newArraySpec = newArray; // If it appears to have been augmented make new one augemented\n\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  } // If it was a fullspec make new one a fullspec\n\n\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray\n    };\n    helper.copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n\n  return newArraySpec;\n}\n/**\n * Concatinates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primtiives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatinated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction concatVertices(arrayOfArrays) {\n  var names = {};\n  var baseName; // get names of all arrays.\n  // and numElements for each set of vertices\n\n  var _loop = function _loop(ii) {\n    var arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function (name) {\n      // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n\n      var arrayInfo = arrays[name];\n      var numComponents = getNumComponents(arrayInfo, name);\n      var array = getArray(arrayInfo);\n      var numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  };\n\n  for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n    _loop(ii);\n  } // compute length of combined array\n  // and return one for reference\n\n\n  function getLengthOfCombinedArrays(name) {\n    var length = 0;\n    var arraySpec;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n      length += array.length;\n\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n\n    return {\n      length: length,\n      spec: arraySpec\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    var baseIndex = 0;\n    var offset = 0;\n\n    for (var ii = 0; ii < arrayOfArrays.length; ++ii) {\n      var arrays = arrayOfArrays[ii];\n      var arrayInfo = arrays[name];\n      var array = getArray(arrayInfo);\n\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n\n      offset += array.length;\n    }\n  }\n\n  var base = names[baseName];\n  var newArrays = {};\n  Object.keys(names).forEach(function (name) {\n    var info = getLengthOfCombinedArrays(name);\n    var newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The dupilicated vertices.\n * @memberOf module:twgl/primitives\n */\n\n\nfunction duplicateVertices(arrays) {\n  var newArrays = {};\n  Object.keys(arrays).forEach(function (name) {\n    var arraySpec = arrays[name];\n    var srcArray = getArray(arraySpec);\n    var newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nvar create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nexports.create3DFBufferInfo = create3DFBufferInfo;\nvar create3DFBuffers = createBufferFunc(create3DFVertices);\nexports.create3DFBuffers = create3DFBuffers;\nvar createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nexports.createCubeBufferInfo = createCubeBufferInfo;\nvar createCubeBuffers = createBufferFunc(createCubeVertices);\nexports.createCubeBuffers = createCubeBuffers;\nvar createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nexports.createPlaneBufferInfo = createPlaneBufferInfo;\nvar createPlaneBuffers = createBufferFunc(createPlaneVertices);\nexports.createPlaneBuffers = createPlaneBuffers;\nvar createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nexports.createSphereBufferInfo = createSphereBufferInfo;\nvar createSphereBuffers = createBufferFunc(createSphereVertices);\nexports.createSphereBuffers = createSphereBuffers;\nvar createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBufferInfo = createTruncatedConeBufferInfo;\nvar createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nexports.createTruncatedConeBuffers = createTruncatedConeBuffers;\nvar createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nexports.createXYQuadBufferInfo = createXYQuadBufferInfo;\nvar createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nexports.createXYQuadBuffers = createXYQuadBuffers;\nvar createCresentBufferInfo = createBufferInfoFunc(createCresentVertices);\nexports.createCresentBufferInfo = createCresentBufferInfo;\nvar createCresentBuffers = createBufferFunc(createCresentVertices);\nexports.createCresentBuffers = createCresentBuffers;\nvar createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nexports.createCylinderBufferInfo = createCylinderBufferInfo;\nvar createCylinderBuffers = createBufferFunc(createCylinderVertices);\nexports.createCylinderBuffers = createCylinderBuffers;\nvar createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nexports.createTorusBufferInfo = createTorusBufferInfo;\nvar createTorusBuffers = createBufferFunc(createTorusVertices);\nexports.createTorusBuffers = createTorusBuffers;\nvar createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nexports.createDiscBufferInfo = createDiscBufferInfo;\nvar createDiscBuffers = createBufferFunc(createDiscVertices);\nexports.createDiscBuffers = createDiscBuffers;\n\n/***/ }),\n\n/***/ \"./src/programs.js\":\n/*!*************************!*\\\n  !*** ./src/programs.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createAttributeSetters = createAttributeSetters;\nexports.createProgram = createProgram;\nexports.createProgramFromScripts = createProgramFromScripts;\nexports.createProgramFromSources = createProgramFromSources;\nexports.createProgramInfo = createProgramInfo;\nexports.createProgramInfoFromProgram = createProgramInfoFromProgram;\nexports.createUniformSetters = createUniformSetters;\nexports.createUniformBlockSpecFromProgram = createUniformBlockSpecFromProgram;\nexports.createUniformBlockInfoFromProgram = createUniformBlockInfoFromProgram;\nexports.createUniformBlockInfo = createUniformBlockInfo;\nexports.createTransformFeedback = createTransformFeedback;\nexports.createTransformFeedbackInfo = createTransformFeedbackInfo;\nexports.bindTransformFeedbackInfo = bindTransformFeedbackInfo;\nexports.setAttributes = setAttributes;\nexports.setBuffersAndAttributes = setBuffersAndAttributes;\nexports.setUniforms = setUniforms;\nexports.setUniformBlock = setUniformBlock;\nexports.setBlockUniforms = setBlockUniforms;\nexports.bindUniformBlock = bindUniformBlock;\n\nvar utils = _interopRequireWildcard(__webpack_require__(/*! ./utils.js */ \"./src/utils.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\nvar error = helper.error;\nvar warn = helper.warn;\nvar getElementById = typeof document !== 'undefined' && document.getElementById ? document.getElementById.bind(document) : function () {\n  return null;\n};\nvar FLOAT = 0x1406;\nvar FLOAT_VEC2 = 0x8B50;\nvar FLOAT_VEC3 = 0x8B51;\nvar FLOAT_VEC4 = 0x8B52;\nvar INT = 0x1404;\nvar INT_VEC2 = 0x8B53;\nvar INT_VEC3 = 0x8B54;\nvar INT_VEC4 = 0x8B55;\nvar BOOL = 0x8B56;\nvar BOOL_VEC2 = 0x8B57;\nvar BOOL_VEC3 = 0x8B58;\nvar BOOL_VEC4 = 0x8B59;\nvar FLOAT_MAT2 = 0x8B5A;\nvar FLOAT_MAT3 = 0x8B5B;\nvar FLOAT_MAT4 = 0x8B5C;\nvar SAMPLER_2D = 0x8B5E;\nvar SAMPLER_CUBE = 0x8B60;\nvar SAMPLER_3D = 0x8B5F;\nvar SAMPLER_2D_SHADOW = 0x8B62;\nvar FLOAT_MAT2x3 = 0x8B65;\nvar FLOAT_MAT2x4 = 0x8B66;\nvar FLOAT_MAT3x2 = 0x8B67;\nvar FLOAT_MAT3x4 = 0x8B68;\nvar FLOAT_MAT4x2 = 0x8B69;\nvar FLOAT_MAT4x3 = 0x8B6A;\nvar SAMPLER_2D_ARRAY = 0x8DC1;\nvar SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;\nvar SAMPLER_CUBE_SHADOW = 0x8DC5;\nvar UNSIGNED_INT = 0x1405;\nvar UNSIGNED_INT_VEC2 = 0x8DC6;\nvar UNSIGNED_INT_VEC3 = 0x8DC7;\nvar UNSIGNED_INT_VEC4 = 0x8DC8;\nvar INT_SAMPLER_2D = 0x8DCA;\nvar INT_SAMPLER_3D = 0x8DCB;\nvar INT_SAMPLER_CUBE = 0x8DCC;\nvar INT_SAMPLER_2D_ARRAY = 0x8DCF;\nvar UNSIGNED_INT_SAMPLER_2D = 0x8DD2;\nvar UNSIGNED_INT_SAMPLER_3D = 0x8DD3;\nvar UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;\nvar UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\nvar TEXTURE_2D = 0x0DE1;\nvar TEXTURE_CUBE_MAP = 0x8513;\nvar TEXTURE_3D = 0x806F;\nvar TEXTURE_2D_ARRAY = 0x8C1A;\nvar typeMap = {};\n/**\n * Returns the corresponding bind point for a given sampler type\n */\n\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n} // This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\n\nfunction floatSetter(gl, location) {\n  return function (v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function (v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function (v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function (v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function (v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function (v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function (v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function (v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  return utils.isWebGL2(gl) ? function (textureOrPair) {\n    var texture;\n    var sampler;\n\n    if (helper.isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function (texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(gl.TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  var bindPoint = getBindPointForSamplerType(gl, type);\n  var units = new Int32Array(size);\n\n  for (var ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return utils.isWebGL2(gl) ? function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (textureOrPair, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      var texture;\n      var sampler;\n\n      if (helper.isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function (textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function (texture, index) {\n      gl.activeTexture(gl.TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT] = {\n  Type: Float32Array,\n  size: 4,\n  setter: floatSetter,\n  arraySetter: floatArraySetter\n};\ntypeMap[FLOAT_VEC2] = {\n  Type: Float32Array,\n  size: 8,\n  setter: floatVec2Setter\n};\ntypeMap[FLOAT_VEC3] = {\n  Type: Float32Array,\n  size: 12,\n  setter: floatVec3Setter\n};\ntypeMap[FLOAT_VEC4] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatVec4Setter\n};\ntypeMap[INT] = {\n  Type: Int32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[INT_VEC2] = {\n  Type: Int32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[INT_VEC3] = {\n  Type: Int32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[INT_VEC4] = {\n  Type: Int32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[UNSIGNED_INT] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: uintSetter,\n  arraySetter: uintArraySetter\n};\ntypeMap[UNSIGNED_INT_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: uintVec2Setter\n};\ntypeMap[UNSIGNED_INT_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: uintVec3Setter\n};\ntypeMap[UNSIGNED_INT_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: uintVec4Setter\n};\ntypeMap[BOOL] = {\n  Type: Uint32Array,\n  size: 4,\n  setter: intSetter,\n  arraySetter: intArraySetter\n};\ntypeMap[BOOL_VEC2] = {\n  Type: Uint32Array,\n  size: 8,\n  setter: intVec2Setter\n};\ntypeMap[BOOL_VEC3] = {\n  Type: Uint32Array,\n  size: 12,\n  setter: intVec3Setter\n};\ntypeMap[BOOL_VEC4] = {\n  Type: Uint32Array,\n  size: 16,\n  setter: intVec4Setter\n};\ntypeMap[FLOAT_MAT2] = {\n  Type: Float32Array,\n  size: 16,\n  setter: floatMat2Setter\n};\ntypeMap[FLOAT_MAT3] = {\n  Type: Float32Array,\n  size: 36,\n  setter: floatMat3Setter\n};\ntypeMap[FLOAT_MAT4] = {\n  Type: Float32Array,\n  size: 64,\n  setter: floatMat4Setter\n};\ntypeMap[FLOAT_MAT2x3] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat23Setter\n};\ntypeMap[FLOAT_MAT2x4] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat24Setter\n};\ntypeMap[FLOAT_MAT3x2] = {\n  Type: Float32Array,\n  size: 24,\n  setter: floatMat32Setter\n};\ntypeMap[FLOAT_MAT3x4] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat34Setter\n};\ntypeMap[FLOAT_MAT4x2] = {\n  Type: Float32Array,\n  size: 32,\n  setter: floatMat42Setter\n};\ntypeMap[FLOAT_MAT4x3] = {\n  Type: Float32Array,\n  size: 48,\n  setter: floatMat43Setter\n};\ntypeMap[SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[SAMPLER_2D_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_2D_ARRAY_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[SAMPLER_CUBE_SHADOW] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_3D] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_3D\n};\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_CUBE_MAP\n};\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = {\n  Type: null,\n  size: 0,\n  setter: samplerSetter,\n  arraySetter: samplerArraySetter,\n  bindPoint: TEXTURE_2D_ARRAY\n};\n\nfunction floatAttribSetter(gl, index) {\n  return function (b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n\n      switch (b.value.length) {\n        case 4:\n          gl.vertexAttrib4fv(index, b.value);\n          break;\n\n        case 3:\n          gl.vertexAttrib3fv(index, b.value);\n          break;\n\n        case 2:\n          gl.vertexAttrib2fv(index, b.value);\n          break;\n\n        case 1:\n          gl.vertexAttrib1fv(index, b.value);\n          break;\n\n        default:\n          throw new Error('the length of a float constant value must be between 1 and 4!');\n      }\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribPointer(index, b.numComponents || b.size, b.type || gl.FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function (b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n\n      if (b.value.length === 4) {\n        gl.vertexAttrib4iv(index, b.value);\n      } else {\n        throw new Error('The length of an integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(index, b.numComponents || b.size, b.type || gl.INT, b.stride || 0, b.offset || 0);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction uintAttribSetter(gl, index) {\n  return function (b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n\n      if (b.value.length === 4) {\n        gl.vertexAttrib4uiv(index, b.value);\n      } else {\n        throw new Error('The length of an unsigned integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(index, b.numComponents || b.size, b.type || gl.UNSIGNED_INT, b.stride || 0, b.offset || 0);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index, b.divisor);\n      }\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  var defaultSize = typeInfo.size;\n  var count = typeInfo.count;\n  return function (b) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, b.buffer);\n    var numComponents = b.size || b.numComponents || defaultSize;\n    var size = numComponents / count;\n    var type = b.type || gl.FLOAT;\n    var typeInfo = typeMap[type];\n    var stride = typeInfo.size * numComponents;\n    var normalize = b.normalize || false;\n    var offset = b.offset || 0;\n    var rowOffset = stride / count;\n\n    for (var i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(index + i, size, type, normalize, stride, offset + rowOffset * i);\n\n      if (b.divisor !== undefined) {\n        gl.vertexAttribDivisor(index + i, b.divisor);\n      }\n    }\n  };\n}\n\nvar attrTypeMap = {};\nattrTypeMap[FLOAT] = {\n  size: 4,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC2] = {\n  size: 8,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC3] = {\n  size: 12,\n  setter: floatAttribSetter\n};\nattrTypeMap[FLOAT_VEC4] = {\n  size: 16,\n  setter: floatAttribSetter\n};\nattrTypeMap[INT] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[INT_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[UNSIGNED_INT] = {\n  size: 4,\n  setter: uintAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC2] = {\n  size: 8,\n  setter: uintAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC3] = {\n  size: 12,\n  setter: uintAttribSetter\n};\nattrTypeMap[UNSIGNED_INT_VEC4] = {\n  size: 16,\n  setter: uintAttribSetter\n};\nattrTypeMap[BOOL] = {\n  size: 4,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC2] = {\n  size: 8,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC3] = {\n  size: 12,\n  setter: intAttribSetter\n};\nattrTypeMap[BOOL_VEC4] = {\n  size: 16,\n  setter: intAttribSetter\n};\nattrTypeMap[FLOAT_MAT2] = {\n  size: 4,\n  setter: matAttribSetter,\n  count: 2\n};\nattrTypeMap[FLOAT_MAT3] = {\n  size: 9,\n  setter: matAttribSetter,\n  count: 3\n};\nattrTypeMap[FLOAT_MAT4] = {\n  size: 16,\n  setter: matAttribSetter,\n  count: 4\n}; // make sure we don't see a global gl\n\nvar gl = undefined; // eslint-disable-line\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\nfunction addLineNumbers(src, lineOffset) {\n  lineOffset = lineOffset || 0;\n  ++lineOffset;\n  return src.split(\"\\n\").map(function (line, ndx) {\n    return ndx + lineOffset + \": \" + line;\n  }).join(\"\\n\");\n}\n\nvar spaceRE = /^[ \\t]*\\n/;\n/**\n * Loads a shader.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} shaderSource The shader source.\n * @param {number} shaderType The type of shader.\n * @param {module:twgl.ErrorCallback} opt_errorCallback callback for errors.\n * @return {WebGLShader} The created shader.\n * @private\n */\n\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\n  var errFn = opt_errorCallback || error; // Create the shader object\n\n  var shader = gl.createShader(shaderType); // Remove the first end of line because WebGL 2.0 requires\n  // #version 300 es\n  // as the first line. No whitespace allowed before that line\n  // so\n  //\n  // <script>\n  // #version 300 es\n  // </script>\n  //\n  // Has one line before it which is invalid according to GLSL ES 3.00\n  //\n\n  var lineOffset = 0;\n\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  } // Load the shader source\n\n\n  gl.shaderSource(shader, shaderSource); // Compile the shader\n\n  gl.compileShader(shader); // Check the compile status\n\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    var lastError = gl.getShaderInfoLog(shader);\n    errFn(addLineNumbers(shaderSource, lineOffset) + \"\\n*** Error compiling shader: \" + lastError);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>} [attribLocations] a attribute name to location map\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments pased on\n * @private\n */\n\n\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  var transformFeedbackVaryings;\n\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    // If we have an errorCallback we can just return this object\n    // Otherwise we need to construct one with default errorCallback\n    if (opt_attribs.errorCallback) {\n      return opt_attribs;\n    }\n\n    var opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n  }\n\n  var options = {\n    errorCallback: opt_errorCallback || error,\n    transformFeedbackVaryings: transformFeedbackVaryings\n  };\n\n  if (opt_attribs) {\n    var attribLocations = {};\n\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function (attrib, ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs;\n    }\n\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nvar defaultShaderType = [\"VERTEX_SHADER\", \"FRAGMENT_SHADER\"];\n\nfunction getShaderTypeFromScriptType(gl, scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return gl.FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return gl.VERTEX_SHADER;\n  }\n\n  return undefined;\n}\n\nfunction deleteShaders(gl, shaders) {\n  shaders.forEach(function (shader) {\n    gl.deleteShader(shader);\n  });\n}\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program and calls useProgram.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgram(gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var realShaders = [];\n  var newShaders = [];\n\n  for (var ndx = 0; ndx < shaders.length; ++ndx) {\n    var shader = shaders[ndx];\n\n    if (typeof shader === 'string') {\n      var elem = getElementById(shader);\n      var src = elem ? elem.text : shader;\n      var type = gl[defaultShaderType[ndx]];\n\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(gl, elem.type) || type;\n      }\n\n      shader = loadShader(gl, src, type, progOptions.errorCallback);\n      newShaders.push(shader);\n    }\n\n    if (helper.isShader(gl, shader)) {\n      realShaders.push(shader);\n    }\n  }\n\n  if (realShaders.length !== shaders.length) {\n    progOptions.errorCallback(\"not enough shaders for program\");\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  var program = gl.createProgram();\n  realShaders.forEach(function (shader) {\n    gl.attachShader(program, shader);\n  });\n\n  if (progOptions.attribLocations) {\n    Object.keys(progOptions.attribLocations).forEach(function (attrib) {\n      gl.bindAttribLocation(program, progOptions.attribLocations[attrib], attrib);\n    });\n  }\n\n  var varyings = progOptions.transformFeedbackVaryings;\n\n  if (varyings) {\n    if (varyings.attribs) {\n      varyings = varyings.attribs;\n    }\n\n    if (!Array.isArray(varyings)) {\n      varyings = Object.keys(varyings);\n    }\n\n    gl.transformFeedbackVaryings(program, varyings, progOptions.transformFeedbackMode || gl.SEPARATE_ATTRIBS);\n  }\n\n  gl.linkProgram(program); // Check the link status\n\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n  if (!linked) {\n    // something went wrong with the link\n    var lastError = gl.getProgramInfoLog(program);\n    progOptions.errorCallback(\"Error in program linking:\" + lastError);\n    gl.deleteProgram(program);\n    deleteShaders(gl, newShaders);\n    return null;\n  }\n\n  return program;\n}\n/**\n * Loads a shader from a script tag.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {string} scriptId The id of the script tag.\n * @param {number} [opt_shaderType] The type of shader. If not passed in it will\n *     be derived from the type of the script tag.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors.\n * @return {WebGLShader?} The created shader or null if error.\n * @private\n */\n\n\nfunction createShaderFromScript(gl, scriptId, opt_shaderType, opt_errorCallback) {\n  var shaderSource = \"\";\n  var shaderScript = getElementById(scriptId);\n\n  if (!shaderScript) {\n    throw new Error(\"unknown script element: \".concat(scriptId));\n  }\n\n  shaderSource = shaderScript.text;\n  var shaderType = opt_shaderType || getShaderTypeFromScriptType(gl, shaderScript.type);\n\n  if (!shaderType) {\n    throw new Error('unknown shader type');\n  }\n\n  return loadShader(gl, shaderSource, shaderType, opt_errorCallback);\n}\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromScripts(gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderScriptIds.length; ++ii) {\n    var shader = createShaderFromScript(gl, shaderScriptIds[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramFromSources(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var shaders = [];\n\n  for (var ii = 0; ii < shaderSources.length; ++ii) {\n    var shader = loadShader(gl, shaderSources[ii], gl[defaultShaderType[ii]], progOptions.errorCallback);\n\n    if (!shader) {\n      return null;\n    }\n\n    shaders.push(shader);\n  }\n\n  return createProgram(gl, shaders, progOptions);\n}\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n * @private\n */\n\n\nfunction isBuiltIn(info) {\n  var name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformSetters(gl, program) {\n  var textureUnit = 0;\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n\n  function createUniformSetter(program, uniformInfo) {\n    var location = gl.getUniformLocation(program, uniformInfo.name);\n    var isArray = uniformInfo.size > 1 && uniformInfo.name.substr(-3) === \"[0]\";\n    var type = uniformInfo.type;\n    var typeInfo = typeMap[type];\n\n    if (!typeInfo) {\n      throw new Error(\"unknown type: 0x\".concat(type.toString(16))); // we should never get here.\n    }\n\n    var setter;\n\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      var unit = textureUnit;\n      textureUnit += uniformInfo.size;\n\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n\n    setter.location = location;\n    return setter;\n  }\n\n  var uniformSetters = {};\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n\n    var name = uniformInfo.name; // remove the array suffix.\n\n    if (name.substr(-3) === \"[0]\") {\n      name = name.substr(0, name.length - 3);\n    }\n\n    var setter = createUniformSetter(program, uniformInfo);\n    uniformSetters[name] = setter;\n  }\n\n  return uniformSetters;\n}\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedbackInfo(gl, program) {\n  var info = {};\n  var numVaryings = gl.getProgramParameter(program, gl.TRANSFORM_FEEDBACK_VARYINGS);\n\n  for (var ii = 0; ii < numVaryings; ++ii) {\n    var varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size\n    };\n  }\n\n  return info;\n}\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\n\n\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n\n  for (var name in bufferInfo) {\n    var varying = transformFeedbackInfo[name];\n\n    if (varying) {\n      var buf = bufferInfo[name];\n\n      if (buf.offset) {\n        gl.bindBufferRange(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\n\n\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  var tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null);\n  return tf;\n}\n/**\n * @typedef {Object} UniformData\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanitory\n * @property {bool} usedByFragmentShader Self explanitory\n * @property {bool} used Self explanitory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec> blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  var uniformData = [];\n  var uniformIndices = [];\n\n  for (var ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    var uniformInfo = gl.getActiveUniform(program, ii);\n\n    if (isBuiltIn(uniformInfo)) {\n      break;\n    } // REMOVE [0]?\n\n\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [[\"UNIFORM_TYPE\", \"type\"], [\"UNIFORM_SIZE\", \"size\"], // num elements\n  [\"UNIFORM_BLOCK_INDEX\", \"blockNdx\"], [\"UNIFORM_OFFSET\", \"offset\"]].forEach(function (pair) {\n    var pname = pair[0];\n    var key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function (value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n  var blockSpecs = {};\n  var numUniformBlocks = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n\n  for (var _ii = 0; _ii < numUniformBlocks; ++_ii) {\n    var name = gl.getActiveUniformBlockName(program, _ii);\n    var blockSpec = {\n      index: _ii,\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, _ii, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES)\n    };\n    blockSpec.used = blockSpec.usedByVertexSahder || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData\n  };\n}\n\nvar arraySuffixRE = /\\[\\d+\\]\\.$/; // better way to check?\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object.<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uinformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  var blockSpecs = uniformBlockSpec.blockSpecs;\n  var uniformData = uniformBlockSpec.uniformData;\n  var blockSpec = blockSpecs[blockName];\n\n  if (!blockSpec) {\n    warn(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {}\n    };\n  }\n\n  var array = new ArrayBuffer(blockSpec.size);\n  var buffer = gl.createBuffer();\n  var uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(gl.UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n  var prefix = blockName + \".\";\n\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n\n  var uniforms = {};\n  blockSpec.uniformIndices.forEach(function (uniformNdx) {\n    var data = uniformData[uniformNdx];\n    var typeInfo = typeMap[data.type];\n    var Type = typeInfo.Type;\n    var length = data.size * typeInfo.size;\n    var name = data.name;\n\n    if (name.substr(0, prefix.length) === prefix) {\n      name = name.substr(prefix.length);\n    }\n\n    uniforms[name] = new Type(array, data.offset, length / Type.BYTES_PER_ELEMENT);\n  });\n  return {\n    name: blockName,\n    array: array,\n    asFloat: new Float32Array(array),\n    // for debugging\n    buffer: buffer,\n    uniforms: uniforms\n  };\n}\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\n\n\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n/**\n * Binds a unform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the valus into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\n\n\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  var uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  var blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n\n  if (blockSpec) {\n    var bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n\n  return false;\n}\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(gl.UNIFORM_BUFFER, uniformBlockInfo.array, gl.DYNAMIC_DRAW);\n  }\n}\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  var uniforms = uniformBlockInfo.uniforms;\n\n  for (var name in values) {\n    var array = uniforms[name];\n\n    if (array) {\n      var value = values[name];\n\n      if (value.length) {\n        array.set(value);\n      } else {\n        array[0] = value;\n      }\n    }\n  }\n}\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     var texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n * @memberOf module:twgl/programs\n */\n\n\nfunction setUniforms(setters, values) {\n  // eslint-disable-line\n  var actualSetters = setters.uniformSetters || setters;\n  var numArgs = arguments.length;\n\n  for (var andx = 1; andx < numArgs; ++andx) {\n    var vals = arguments[andx];\n\n    if (Array.isArray(vals)) {\n      var numValues = vals.length;\n\n      for (var ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, vals[ii]);\n      }\n    } else {\n      for (var name in vals) {\n        var setter = actualSetters[name];\n\n        if (setter) {\n          setter(vals[name]);\n        }\n      }\n    }\n  }\n}\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createAttributeSetters(gl, program) {\n  var attribSetters = {};\n  var numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (var ii = 0; ii < numAttribs; ++ii) {\n    var attribInfo = gl.getActiveAttrib(program, ii);\n\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n\n    var index = gl.getAttribLocation(program, attribInfo.name);\n    var typeInfo = attrTypeMap[attribInfo.type];\n    var setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n */\n\n\nfunction setAttributes(setters, buffers) {\n  for (var name in buffers) {\n    var setter = setters[name];\n\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivilent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgrmaInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\n\n\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n\n    if (buffers.indices) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n    }\n  }\n}\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @propetty {module:twgl.UniformBlockSpec} [uniformBlockSpace] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfoFromProgram(gl, program) {\n  var uniformSetters = createUniformSetters(gl, program);\n  var attribSetters = createAttributeSetters(gl, program);\n  var programInfo = {\n    program: program,\n    uniformSetters: uniformSetters,\n    attribSetters: attribSetters\n  };\n\n  if (utils.isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\n\n\nfunction createProgramInfo(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  var progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  var good = true;\n  shaderSources = shaderSources.map(function (source) {\n    // Lets assume if there is no \\n it's an id\n    if (source.indexOf(\"\\n\") < 0) {\n      var script = getElementById(source);\n\n      if (!script) {\n        progOptions.errorCallback(\"no element with id: \" + source);\n        good = false;\n      } else {\n        source = script.text;\n      }\n    }\n\n    return source;\n  });\n\n  if (!good) {\n    return null;\n  }\n\n  var program = createProgramFromSources(gl, shaderSources, progOptions);\n\n  if (!program) {\n    return null;\n  }\n\n  return createProgramInfoFromProgram(gl, program);\n}\n\n/***/ }),\n\n/***/ \"./src/textures.js\":\n/*!*************************!*\\\n  !*** ./src/textures.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.setTextureDefaults_ = setDefaults;\nexports.createSampler = createSampler;\nexports.createSamplers = createSamplers;\nexports.setSamplerParameters = setSamplerParameters;\nexports.createTexture = createTexture;\nexports.setEmptyTexture = setEmptyTexture;\nexports.setTextureFromArray = setTextureFromArray;\nexports.loadTextureFromUrl = loadTextureFromUrl;\nexports.setTextureFromElement = setTextureFromElement;\nexports.setTextureFilteringForSize = setTextureFilteringForSize;\nexports.setTextureParameters = setTextureParameters;\nexports.setDefaultTextureColor = setDefaultTextureColor;\nexports.createTextures = createTextures;\nexports.resizeTexture = resizeTexture;\nexports.canGenerateMipmap = canGenerateMipmap;\nexports.canFilter = canFilter;\nexports.getNumComponentsForFormat = getNumComponentsForFormat;\nexports.getBytesPerElementForInternalFormat = getBytesPerElementForInternalFormat;\nexports.getFormatAndTypeForInternalFormat = getFormatAndTypeForInternalFormat;\n\nvar utils = _interopRequireWildcard(__webpack_require__(/*! ./utils.js */ \"./src/utils.js\"));\n\nvar typedArrays = _interopRequireWildcard(__webpack_require__(/*! ./typedarrays.js */ \"./src/typedarrays.js\"));\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level texture related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.textures` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/textures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined\n};\nvar isArrayBuffer = typedArrays.isArrayBuffer; // Should we make this on demand?\n\nvar ctx = typeof document !== 'undefined' && document.createElement ? document.createElement(\"canvas\").getContext(\"2d\") : null; // NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an imagebitmap to be cut. Unfortunately cutting an imagebitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\n\nvar ALPHA = 0x1906;\nvar RGB = 0x1907;\nvar RGBA = 0x1908;\nvar LUMINANCE = 0x1909;\nvar LUMINANCE_ALPHA = 0x190A;\nvar DEPTH_COMPONENT = 0x1902;\nvar DEPTH_STENCIL = 0x84F9;\n/* TextureWrapMode */\n\nvar REPEAT = 0x2901; // eslint-disable-line\n\nvar MIRRORED_REPEAT = 0x8370; // eslint-disable-line\n\n/* TextureMagFilter */\n\nvar NEAREST = 0x2600; // eslint-disable-line\n\n/* TextureMinFilter */\n\nvar NEAREST_MIPMAP_NEAREST = 0x2700; // eslint-disable-line\n\nvar LINEAR_MIPMAP_NEAREST = 0x2701; // eslint-disable-line\n\nvar NEAREST_MIPMAP_LINEAR = 0x2702; // eslint-disable-line\n\nvar LINEAR_MIPMAP_LINEAR = 0x2703; // eslint-disable-line\n\nvar R8 = 0x8229;\nvar R8_SNORM = 0x8F94;\nvar R16F = 0x822D;\nvar R32F = 0x822E;\nvar R8UI = 0x8232;\nvar R8I = 0x8231;\nvar RG16UI = 0x823A;\nvar RG16I = 0x8239;\nvar RG32UI = 0x823C;\nvar RG32I = 0x823B;\nvar RG8 = 0x822B;\nvar RG8_SNORM = 0x8F95;\nvar RG16F = 0x822F;\nvar RG32F = 0x8230;\nvar RG8UI = 0x8238;\nvar RG8I = 0x8237;\nvar R16UI = 0x8234;\nvar R16I = 0x8233;\nvar R32UI = 0x8236;\nvar R32I = 0x8235;\nvar RGB8 = 0x8051;\nvar SRGB8 = 0x8C41;\nvar RGB565 = 0x8D62;\nvar RGB8_SNORM = 0x8F96;\nvar R11F_G11F_B10F = 0x8C3A;\nvar RGB9_E5 = 0x8C3D;\nvar RGB16F = 0x881B;\nvar RGB32F = 0x8815;\nvar RGB8UI = 0x8D7D;\nvar RGB8I = 0x8D8F;\nvar RGB16UI = 0x8D77;\nvar RGB16I = 0x8D89;\nvar RGB32UI = 0x8D71;\nvar RGB32I = 0x8D83;\nvar RGBA8 = 0x8058;\nvar SRGB8_ALPHA8 = 0x8C43;\nvar RGBA8_SNORM = 0x8F97;\nvar RGB5_A1 = 0x8057;\nvar RGBA4 = 0x8056;\nvar RGB10_A2 = 0x8059;\nvar RGBA16F = 0x881A;\nvar RGBA32F = 0x8814;\nvar RGBA8UI = 0x8D7C;\nvar RGBA8I = 0x8D8E;\nvar RGB10_A2UI = 0x906F;\nvar RGBA16UI = 0x8D76;\nvar RGBA16I = 0x8D88;\nvar RGBA32I = 0x8D82;\nvar RGBA32UI = 0x8D70;\nvar DEPTH_COMPONENT16 = 0x81A5;\nvar DEPTH_COMPONENT24 = 0x81A6;\nvar DEPTH_COMPONENT32F = 0x8CAC;\nvar DEPTH32F_STENCIL8 = 0x8CAD;\nvar DEPTH24_STENCIL8 = 0x88F0;\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar HALF_FLOAT_OES = 0x8D61; // Thanks Khronos for making this different >:(\n\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar RG = 0x8227;\nvar RG_INTEGER = 0x8228;\nvar RED = 0x1903;\nvar RED_INTEGER = 0x8D94;\nvar RGB_INTEGER = 0x8D98;\nvar RGBA_INTEGER = 0x8D99;\nvar formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  var f = formatInfo;\n  f[ALPHA] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE] = {\n    numColorComponents: 1\n  };\n  f[LUMINANCE_ALPHA] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RED] = {\n    numColorComponents: 1\n  };\n  f[RED_INTEGER] = {\n    numColorComponents: 1\n  };\n  f[RG] = {\n    numColorComponents: 2\n  };\n  f[RG_INTEGER] = {\n    numColorComponents: 2\n  };\n  f[RGB] = {\n    numColorComponents: 3\n  };\n  f[RGB_INTEGER] = {\n    numColorComponents: 3\n  };\n  f[RGBA] = {\n    numColorComponents: 4\n  };\n  f[RGBA_INTEGER] = {\n    numColorComponents: 4\n  };\n  f[DEPTH_COMPONENT] = {\n    numColorComponents: 1\n  };\n  f[DEPTH_STENCIL] = {\n    numColorComponents: 2\n  };\n}\n/**\n * @typedef {Object} TextureFormatDetails\n * @property {number} textureFormat format to pass texImage2D and similar functions.\n * @property {boolean} colorRenderable true if you can render to this format of texture.\n * @property {boolean} textureFilterable true if you can filter the texture, false if you can ony use `NEAREST`.\n * @property {number[]} type Array of possible types you can pass to teximage2D and similar function\n * @property {Object.<number,number>} bytesPerElementMap A map of types to bytes per element\n * @private\n */\n\nvar textureInternalFormatInfo = {};\n{\n  // NOTE: these properties need unique names so we can let Uglify mangle the name.\n  var t = textureInternalFormatInfo; // unsized formats\n\n  t[ALPHA] = {\n    textureFormat: ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE] = {\n    textureFormat: LUMINANCE,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1, 2, 2, 4],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[LUMINANCE_ALPHA] = {\n    textureFormat: LUMINANCE_ALPHA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [2, 4, 4, 8],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT]\n  };\n  t[RGB] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 6, 6, 12, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGBA] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 8, 8, 16, 2, 2],\n    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1]\n  }; // sized formats\n\n  t[R8] = {\n    textureFormat: RED,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [1],\n    type: [UNSIGNED_BYTE]\n  };\n  t[R8_SNORM] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [1],\n    type: [BYTE]\n  };\n  t[R16F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[R32F] = {\n    textureFormat: RED,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [FLOAT]\n  };\n  t[R8UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [1],\n    type: [UNSIGNED_BYTE]\n  };\n  t[R8I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [1],\n    type: [BYTE]\n  };\n  t[R16UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2],\n    type: [UNSIGNED_SHORT]\n  };\n  t[R16I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2],\n    type: [SHORT]\n  };\n  t[R32UI] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT]\n  };\n  t[R32I] = {\n    textureFormat: RED_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [INT]\n  };\n  t[RG8] = {\n    textureFormat: RG,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [2],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RG8_SNORM] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [2],\n    type: [BYTE]\n  };\n  t[RG16F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [8, 4],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RG32F] = {\n    textureFormat: RG,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [FLOAT]\n  };\n  t[RG8UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RG8I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2],\n    type: [BYTE]\n  };\n  t[RG16UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_SHORT]\n  };\n  t[RG16I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [SHORT]\n  };\n  t[RG32UI] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [UNSIGNED_INT]\n  };\n  t[RG32I] = {\n    textureFormat: RG_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [INT]\n  };\n  t[RGB8] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3],\n    type: [UNSIGNED_BYTE]\n  };\n  t[SRGB8] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [3],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RGB565] = {\n    textureFormat: RGB,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [3, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_6_5]\n  };\n  t[RGB8_SNORM] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [3],\n    type: [BYTE]\n  };\n  t[R11F_G11F_B10F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV]\n  };\n  t[RGB9_E5] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6, 4],\n    type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV]\n  };\n  t[RGB16F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [12, 6],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGB32F] = {\n    textureFormat: RGB,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [12],\n    type: [FLOAT]\n  };\n  t[RGB8UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [3],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RGB8I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [3],\n    type: [BYTE]\n  };\n  t[RGB16UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [6],\n    type: [UNSIGNED_SHORT]\n  };\n  t[RGB16I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [6],\n    type: [SHORT]\n  };\n  t[RGB32UI] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [12],\n    type: [UNSIGNED_INT]\n  };\n  t[RGB32I] = {\n    textureFormat: RGB_INTEGER,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [12],\n    type: [INT]\n  };\n  t[RGBA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4],\n    type: [UNSIGNED_BYTE]\n  };\n  t[SRGB8_ALPHA8] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RGBA8_SNORM] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [4],\n    type: [BYTE]\n  };\n  t[RGB5_A1] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2, 4],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA4] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4, 2],\n    type: [UNSIGNED_BYTE, UNSIGNED_SHORT_4_4_4_4]\n  };\n  t[RGB10_A2] = {\n    textureFormat: RGBA,\n    colorRenderable: true,\n    textureFilterable: true,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA16F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: true,\n    bytesPerElement: [16, 8],\n    type: [FLOAT, HALF_FLOAT]\n  };\n  t[RGBA32F] = {\n    textureFormat: RGBA,\n    colorRenderable: false,\n    textureFilterable: false,\n    bytesPerElement: [16],\n    type: [FLOAT]\n  };\n  t[RGBA8UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_BYTE]\n  };\n  t[RGBA8I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [BYTE]\n  };\n  t[RGB10_A2UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT_2_10_10_10_REV]\n  };\n  t[RGBA16UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [UNSIGNED_SHORT]\n  };\n  t[RGBA16I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [8],\n    type: [SHORT]\n  };\n  t[RGBA32I] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [16],\n    type: [INT]\n  };\n  t[RGBA32UI] = {\n    textureFormat: RGBA_INTEGER,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [16],\n    type: [UNSIGNED_INT]\n  }; // Sized Internal\n\n  t[DEPTH_COMPONENT16] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [2, 4],\n    type: [UNSIGNED_SHORT, UNSIGNED_INT]\n  };\n  t[DEPTH_COMPONENT24] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT]\n  };\n  t[DEPTH_COMPONENT32F] = {\n    textureFormat: DEPTH_COMPONENT,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [FLOAT]\n  };\n  t[DEPTH24_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [UNSIGNED_INT_24_8]\n  };\n  t[DEPTH32F_STENCIL8] = {\n    textureFormat: DEPTH_STENCIL,\n    colorRenderable: true,\n    textureFilterable: false,\n    bytesPerElement: [4],\n    type: [FLOAT_32_UNSIGNED_INT_24_8_REV]\n  };\n  Object.keys(t).forEach(function (internalFormat) {\n    var info = t[internalFormat];\n    info.bytesPerElementMap = {};\n    info.bytesPerElement.forEach(function (bytesPerElement, ndx) {\n      var type = info.type[ndx];\n      info.bytesPerElementMap[type] = bytesPerElement;\n    });\n  });\n}\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\n\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  var bytesPerElement = info.bytesPerElementMap[type];\n\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n\n  return bytesPerElement;\n}\n/**\n * Info related to a specific texture internalFormat as returned\n * from {@link module:twgl/textures.getFormatAndTypeForInternalFormat}.\n *\n * @typedef {Object} TextureFormatInfo\n * @property {number} format Format to pass to texImage2D and related functions\n * @property {number} type Type to pass to texImage2D and related functions\n * @memberOf module:twgl/textures\n */\n\n/**\n * Gets the format and type for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {module:twgl/textures.TextureFormatInfo} the corresponding format and type,\n * @memberOf module:twgl/textures\n */\n\n\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return {\n    format: info.textureFormat,\n    type: info.type[0]\n  };\n}\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n * @private\n */\n\n\nfunction isPowerOf2(value) {\n  return (value & value - 1) === 0;\n}\n/**\n * Gets whether or not we can generate mips for the given\n * internal format.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number} width The width parameter from texImage2D etc..\n * @param {number} height The height parameter from texImage2D etc..\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\n\n\nfunction canGenerateMipmap(gl, width, height, internalFormat\n/*, type */\n) {\n  if (!utils.isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.colorRenderable && info.textureFilterable;\n}\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\n\n\nfunction canFilter(internalFormat\n/*, type */\n) {\n  var info = textureInternalFormatInfo[internalFormat];\n\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n\n  return info.textureFilterable;\n}\n/**\n * Gets the number of compontents for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\n\n\nfunction getNumComponentsForFormat(format) {\n  var info = formatInfo[format];\n\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n\n  return info.numColorComponents;\n}\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n * @private\n */\n\n\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer(src)) {\n    return typedArrays.getGLTypeForTypedArray(src);\n  }\n\n  return defaultType || gl.UNSIGNED_BYTE;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n\n  if (!width && !height) {\n    var size = Math.sqrt(numElements / (target === gl.TEXTURE_CUBE_MAP ? 6 : 1));\n\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\n\n\nfunction setDefaultTextureColor(color) {\n  defaults.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documentented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number[]|ArrayBufferView} [color] Color to initialize this texture with if loading an image asynchronously.\n *     The default use a blue 1x1 pixel texture. You can set another default by calling `twgl.setDefaults`\n *     or you can set an individual texture's initial color by setting this property. Example: `[1, .5, .5, 1]` = pink\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediatley. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then eact entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n// NOTE: While querying GL is considered slow it's not remotely as slow\n// as uploading a texture. On top of that you're unlikely to call this in\n// a perf critical loop. Even if upload a texture every frame that's unlikely\n// to be more than 1 or 2 textures a frame. In other words, the benefits of\n// making the API easy to use outweigh any supposed perf benefits\n//\n// Also note I get that having one global of these is bad practice.\n// As long as it's used correctly it means no garbage which probably\n// doesn't matter when dealing with textures but old habits die hard.\n\n\nvar lastPackState = {};\n/**\n * Saves any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\n\nfunction savePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    lastPackState.colorspaceConversion = gl.getParameter(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL);\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    lastPackState.premultiplyAlpha = gl.getParameter(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    lastPackState.flipY = gl.getParameter(gl.UNPACK_FLIP_Y_WEBGL);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n/**\n * Restores any packing state that was set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\n\n\nfunction restorePackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, lastPackState.colorspaceConversion);\n  }\n\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, lastPackState.premultiplyAlpha);\n  }\n\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, lastPackState.flipY);\n  }\n}\n/**\n * Saves state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\n\n\nfunction saveSkipState(gl) {\n  lastPackState.unpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n\n  if (utils.isWebGL2(gl)) {\n    lastPackState.unpackRowLength = gl.getParameter(gl.UNPACK_ROW_LENGTH);\n    lastPackState.unpackImageHeight = gl.getParameter(gl.UNPACK_IMAGE_HEIGHT);\n    lastPackState.unpackSkipPixels = gl.getParameter(gl.UNPACK_SKIP_PIXELS);\n    lastPackState.unpackSkipRows = gl.getParameter(gl.UNPACK_SKIP_ROWS);\n    lastPackState.unpackSkipImages = gl.getParameter(gl.UNPACK_SKIP_IMAGES);\n  }\n}\n/**\n * Restores state related to data size\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\n\n\nfunction restoreSkipState(gl) {\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, lastPackState.unpackAlignment);\n\n  if (utils.isWebGL2(gl)) {\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, lastPackState.unpackRowLength);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, lastPackState.unpackImageHeight);\n    gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, lastPackState.unpackSkipPixels);\n    gl.pixelStorei(gl.UNPACK_SKIP_ROWS, lastPackState.unpackSkipRows);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, lastPackState.unpackSkipImages);\n  }\n}\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParamteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @private\n */\n\n\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.minMag);\n  }\n\n  if (options.min) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_FILTER, options.min);\n  }\n\n  if (options.mag) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAG_FILTER, options.mag);\n  }\n\n  if (options.wrap) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrap);\n\n    if (target === gl.TEXTURE_3D || helper.isSampler(gl, target)) {\n      parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_R, options.wrapR);\n  }\n\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_S, options.wrapS);\n  }\n\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, gl.TEXTURE_WRAP_T, options.wrapT);\n  }\n\n  if (options.minLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MIN_LOD, options.minLod);\n  }\n\n  if (options.maxLod) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LOD, options.maxLod);\n  }\n\n  if (options.baseLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n\n  if (options.maxLevel) {\n    parameteriFn.call(gl, target, gl.TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n}\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureParameters(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n * @private\n */\n\n\nfunction createSampler(gl, options) {\n  var sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n * @private\n */\n\n\nfunction createSamplers(gl, samplerOptions) {\n  var samplers = {};\n  Object.keys(samplerOptions).forEach(function (name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n * @private\n */\n\n\nfunction make1Pixel(color) {\n  color = color || defaults.textureColor;\n\n  if (isArrayBuffer(color)) {\n    return color;\n  }\n\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @param {number} [type] The type parameter for texImage2D etc..\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type) {\n  options = options || defaults.textureOptions;\n  internalFormat = internalFormat || gl.RGBA;\n  type = type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n\n  if (canGenerateMipmap(gl, width, height, internalFormat, type)) {\n    gl.generateMipmap(target);\n  } else {\n    var filtering = canFilter(internalFormat, type) ? gl.LINEAR : gl.NEAREST;\n    gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || options.auto === undefined && options.level === undefined;\n}\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n * @private\n */\n\n\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [gl.TEXTURE_CUBE_MAP_POSITIVE_X, gl.TEXTURE_CUBE_MAP_NEGATIVE_X, gl.TEXTURE_CUBE_MAP_POSITIVE_Y, gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, gl.TEXTURE_CUBE_MAP_POSITIVE_Z, gl.TEXTURE_CUBE_MAP_NEGATIVE_Z];\n}\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundent but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n * @private\n */\n\n\nfunction getCubeFacesWithNdx(gl, options) {\n  var faces = getCubeFaceOrder(gl, options); // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n\n  var facesWithNdx = faces.map(function (face, ndx) {\n    return {\n      face: face,\n      ndx: ndx\n    };\n  });\n  facesWithNdx.sort(function (a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\n\n\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  var level = options.level || 0;\n  var width = element.width;\n  var height = element.height;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // guess the parts\n    var imgWidth = element.width;\n    var imgHeight = element.height;\n    var size;\n    var slices;\n\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      }); // Free up the canvas memory\n\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (typeof createImageBitmap !== 'undefined') {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function (f) {\n        var xOffset = slices[f.ndx * 2 + 0] * size;\n        var yOffset = slices[f.ndx * 2 + 1] * size; // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be unrenderable.\n\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n        createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none'\n        }).then(function (imageBitmap) {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n          }\n        });\n      });\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    var smallest = Math.min(element.width, element.height);\n    var largest = Math.max(element.width, element.height);\n    var depth = largest / smallest;\n\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n\n    var xMult = element.width === largest ? 1 : 0;\n    var yMult = element.height === largest ? 1 : 0;\n    saveSkipState(gl);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(gl.UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(gl.UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(gl.UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n\n    for (var d = 0; d < depth; ++d) {\n      var srcX = d * smallest * xMult;\n      var srcY = d * smallest * yMult;\n      gl.pixelStorei(gl.UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(gl.UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n\n    restoreSkipState(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n\n  restorePackState(gl, options);\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {}\n/**\n * Checks whether the url's origin is the same so that we can set the `crossOrigin`\n * @param {string} url url to image\n * @returns {boolean} true if the window's origin is the same as image's url\n * @private\n */\n\n\nfunction urlIsSameOrigin(url) {\n  if (typeof document !== 'undefined') {\n    // for IE really\n    var a = document.createElement('a');\n    a.href = url;\n    return a.hostname === location.hostname && a.port === location.port && a.protocol === location.protocol;\n  } else {\n    var localOrigin = new URL(location.href).origin;\n    var urlOrigin = new URL(url, location.href).origin;\n    return urlOrigin === localOrigin;\n  }\n}\n\nfunction setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin) {\n  return crossOrigin === undefined && !urlIsSameOrigin(url) ? 'anonymous' : crossOrigin;\n}\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n * @private\n */\n\n\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  var img;\n  crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults.crossOrigin;\n  crossOrigin = setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin);\n\n  if (typeof Image !== 'undefined') {\n    img = new Image();\n\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    var clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError); // eslint-disable-line\n\n      img.removeEventListener('load', onLoad); // eslint-disable-line\n\n      img = null;\n    };\n\n    var onError = function onError() {\n      var msg = \"couldn't load image: \" + url;\n      helper.error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    var onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (typeof ImageBitmap !== 'undefined') {\n    var err;\n    var bm;\n\n    var cb = function cb() {\n      callback(err, bm);\n    };\n\n    var options = {};\n\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n\n    fetch(url, options).then(function (response) {\n      if (!response.ok) {\n        throw response;\n      }\n\n      return response.blob();\n    }).then(function (blob) {\n      return createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none'\n      });\n    }).then(function (bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function (e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n\n  return img;\n}\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n * @private\n */\n\n\nfunction isTexImageSource(obj) {\n  return typeof ImageBitmap !== 'undefined' && obj instanceof ImageBitmap || typeof ImageData !== 'undefined' && obj instanceof ImageData || typeof HTMLElement !== 'undefined' && obj instanceof HTMLElement;\n}\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @private\n */\n\n\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function () {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n\n  if (options.color === false) {\n    return;\n  } // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n\n\n  var color = make1Pixel(options.color);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n    }\n  } else if (target === gl.TEXTURE_3D || target === gl.TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, gl.RGBA, 1, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  } else {\n    gl.texImage2D(target, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, color);\n  }\n}\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} souce image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as approriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var img = loadAndUseImage(options.src, options.crossOrigin, function (err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D;\n\n  if (target !== gl.TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = 6;\n  var errors = [];\n  var faces = getCubeFaceOrder(gl, options);\n  var imgs; // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          savePackState(gl, options);\n          gl.bindTexture(target, tex); // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder(gl).forEach(function (otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          restorePackState(gl, options);\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n */\n\n\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  var urls = options.src;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || gl.UNSIGNED_BYTE;\n  var target = options.target || gl.TEXTURE_2D_ARRAY;\n\n  if (target !== gl.TEXTURE_3D && target !== gl.TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n\n  setTextureTo1PixelColor(gl, tex, options); // Because it's async we need to copy the options.\n\n  options = Object.assign({}, options);\n  var numToLoad = urls.length;\n  var errors = [];\n  var imgs; // eslint-disable-line\n\n  var level = options.level || 0;\n  var width = options.width;\n  var height = options.height;\n  var depth = urls.length;\n  var firstImage = true;\n\n  function uploadImg(slice) {\n    return function (err, img) {\n      --numToLoad;\n\n      if (err) {\n        errors.push(err);\n      } else {\n        savePackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null); // put it in every slice otherwise some slices will be 0,0,0,0\n\n          for (var s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          var src = img;\n\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src); // free the canvas memory\n\n          if (src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        restorePackState(gl, options);\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function (url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults.textureOptions;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var width = options.width;\n  var height = options.height;\n  var depth = options.depth;\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n\n  if (!isArrayBuffer(src)) {\n    var Type = typedArrays.getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  var bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  var numElements = src.byteLength / bytesPerElement; // TODO: check UNPACK_ALIGNMENT?\n\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + utils.glEnumToString(gl, format);\n  }\n\n  var dimensions;\n\n  if (target === gl.TEXTURE_3D) {\n    if (!width && !height && !depth) {\n      var size = Math.cbrt(numElements);\n\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n\n  saveSkipState(gl);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    var elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    var faceSize = numElements / 6 * elementsPerElement;\n    getCubeFacesWithNdx(gl, options).forEach(function (f) {\n      var offset = faceSize * f.ndx;\n      var data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n\n  restorePackState(gl, options);\n  restoreSkipState(gl);\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type\n  };\n}\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\n\n\nfunction setEmptyTexture(gl, tex, options) {\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type = options.type || formatType.type;\n  savePackState(gl, options);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === gl.TEXTURE_3D) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n\n  restorePackState(gl, options);\n}\n/**\n * Creates a texture based on the options passed in.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  var tex = gl.createTexture();\n  var target = options.target || gl.TEXTURE_2D;\n  var width = options.width || 1;\n  var height = options.height || 1;\n  var internalFormat = options.internalFormat || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var type = options.type || formatType.type;\n  gl.bindTexture(target, tex);\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    // this should have been the default for CUBEMAPS :(\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  var src = options.src;\n\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n\n    if (typeof src === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer(src) || Array.isArray(src) && (typeof src[0] === 'number' || Array.isArray(src[0]) || isArrayBuffer(src[0]))) {\n      var dimensions = setTextureFromArray(gl, tex, src, options);\n      width = dimensions.width;\n      height = dimensions.height;\n      type = dimensions.type;\n    } else if (Array.isArray(src) && (typeof src[0] === 'string' || isTexImageSource(src[0]))) {\n      if (target === gl.TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else if (isTexImageSource(src)) {\n      setTextureFromElement(gl, tex, src, options);\n      width = src.width;\n      height = src.height;\n    } else {\n      throw \"unsupported src type\";\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat, type);\n  }\n\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @memberOf module:twgl/textures\n */\n\n\nfunction resizeTexture(gl, tex, options, width, height) {\n  width = width || options.width;\n  height = height || options.height;\n  var target = options.target || gl.TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  var level = options.level || 0;\n  var internalFormat = options.internalFormat || options.format || gl.RGBA;\n  var formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  var format = options.format || formatType.format;\n  var type;\n  var src = options.src;\n\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer(src) || Array.isArray(src) && typeof src[0] === 'number') {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n\n  if (target === gl.TEXTURE_CUBE_MAP) {\n    for (var ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n * @private\n */\n\n\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' || Array.isArray(src) && typeof src[0] === 'string';\n}\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\n\n\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  var numDownloading = 0;\n  var errors = [];\n  var textures = {};\n  var images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function () {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function (name) {\n    var options = textureOptions[name];\n    var onLoadFn;\n\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function onLoadFn(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n\n        if (err) {\n          errors.push(err);\n        }\n\n        callCallbackIfReady();\n      };\n\n      ++numDownloading;\n    }\n\n    textures[name] = createTexture(gl, options, onLoadFn);\n  }); // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n\n  callCallbackIfReady();\n  return textures;\n} // Using quotes prevents Uglify from changing the names.\n// No speed diff AFAICT.\n\n/***/ }),\n\n/***/ \"./src/twgl-full.js\":\n/*!**************************!*\\\n  !*** ./src/twgl-full.js ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  m4: true,\n  v3: true,\n  primitives: true\n};\nexports.primitives = exports.v3 = exports.m4 = void 0;\n\nvar m4 = _interopRequireWildcard(__webpack_require__(/*! ./m4.js */ \"./src/m4.js\"));\n\nexports.m4 = m4;\n\nvar v3 = _interopRequireWildcard(__webpack_require__(/*! ./v3.js */ \"./src/v3.js\"));\n\nexports.v3 = v3;\n\nvar primitives = _interopRequireWildcard(__webpack_require__(/*! ./primitives.js */ \"./src/primitives.js\"));\n\nexports.primitives = primitives;\n\nvar _twgl = __webpack_require__(/*! ./twgl.js */ \"./src/twgl.js\");\n\nObject.keys(_twgl).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _twgl[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/***/ }),\n\n/***/ \"./src/twgl.js\":\n/*!*********************!*\\\n  !*** ./src/twgl.js ***!\n  \\*********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nvar _exportNames = {\n  addExtensionsToContext: true,\n  getContext: true,\n  getWebGLContext: true,\n  resizeCanvasToDisplaySize: true,\n  setDefaults: true\n};\nexports.addExtensionsToContext = addExtensionsToContext;\nexports.getContext = getContext;\nexports.getWebGLContext = getWebGLContext;\nexports.resizeCanvasToDisplaySize = resizeCanvasToDisplaySize;\nexports.setDefaults = setDefaults;\n\nvar attributes = _interopRequireWildcard(__webpack_require__(/*! ./attributes.js */ \"./src/attributes.js\"));\n\nObject.keys(attributes).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = attributes[key];\n});\n\nvar textures = _interopRequireWildcard(__webpack_require__(/*! ./textures.js */ \"./src/textures.js\"));\n\nObject.keys(textures).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = textures[key];\n});\n\nvar helper = _interopRequireWildcard(__webpack_require__(/*! ./helper.js */ \"./src/helper.js\"));\n\nvar utils = _interopRequireWildcard(__webpack_require__(/*! ./utils.js */ \"./src/utils.js\"));\n\nObject.keys(utils).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = utils[key];\n});\n\nvar _draw = __webpack_require__(/*! ./draw.js */ \"./src/draw.js\");\n\nObject.keys(_draw).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _draw[key];\n});\n\nvar _framebuffers = __webpack_require__(/*! ./framebuffers.js */ \"./src/framebuffers.js\");\n\nObject.keys(_framebuffers).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _framebuffers[key];\n});\n\nvar _programs = __webpack_require__(/*! ./programs.js */ \"./src/programs.js\");\n\nObject.keys(_programs).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _programs[key];\n});\n\nvar _typedarrays = __webpack_require__(/*! ./typedarrays.js */ \"./src/typedarrays.js\");\n\nObject.keys(_typedarrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _typedarrays[key];\n});\n\nvar _vertexArrays = __webpack_require__(/*! ./vertex-arrays.js */ \"./src/vertex-arrays.js\");\n\nObject.keys(_vertexArrays).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  exports[key] = _vertexArrays[key];\n});\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * The main TWGL module.\n *\n * For most use cases you shouldn't need anything outside this module.\n * Exceptions between the stuff added to twgl-full (v3, m4, primitives)\n *\n * @module twgl\n * @borrows module:twgl/attributes.setAttribInfoBufferFromArray as setAttribInfoBufferFromArray\n * @borrows module:twgl/attributes.createBufferInfoFromArrays as createBufferInfoFromArrays\n * @borrows module:twgl/attributes.createVertexArrayInfo as createVertexArrayInfo\n * @borrows module:twgl/draw.drawBufferInfo as drawBufferInfo\n * @borrows module:twgl/draw.drawObjectList as drawObjectList\n * @borrows module:twgl/framebuffers.createFramebufferInfo as createFramebufferInfo\n * @borrows module:twgl/framebuffers.resizeFramebufferInfo as resizeFramebufferInfo\n * @borrows module:twgl/framebuffers.bindFramebufferInfo as bindFramebufferInfo\n * @borrows module:twgl/programs.createProgramInfo as createProgramInfo\n * @borrows module:twgl/programs.createUniformBlockInfo as createUniformBlockInfo\n * @borrows module:twgl/programs.bindUniformBlock as bindUniformBlock\n * @borrows module:twgl/programs.setUniformBlock as setUniformBlock\n * @borrows module:twgl/programs.setBlockUniforms as setBlockUniforms\n * @borrows module:twgl/programs.setUniforms as setUniforms\n * @borrows module:twgl/programs.setBuffersAndAttributes as setBuffersAndAttributes\n * @borrows module:twgl/textures.setTextureFromArray as setTextureFromArray\n * @borrows module:twgl/textures.createTexture as createTexture\n * @borrows module:twgl/textures.resizeTexture as resizeTexture\n * @borrows module:twgl/textures.createTextures as createTextures\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\nvar defaults = {\n  addExtensionsToContext: true\n};\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} [attribPrefix] The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using unprefixed names.\n *\n *   In otherwords I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} [textureColor] Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} [crossOrigin]\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} [addExtensionsToContext]\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n  attributes.setAttributeDefaults_(newDefaults); // eslint-disable-line\n\n  textures.setTextureDefaults_(newDefaults); // eslint-disable-line\n}\n\nvar prefixRE = /^(.*?)_/;\n\nfunction addExtensionToContext(gl, extensionName) {\n  utils.glEnumToString(gl, 0);\n  var ext = gl.getExtension(extensionName);\n\n  if (ext) {\n    var enums = {};\n    var fnSuffix = prefixRE.exec(extensionName)[1];\n    var enumSuffix = '_' + fnSuffix;\n\n    for (var key in ext) {\n      var value = ext[key];\n      var isFunc = typeof value === 'function';\n      var suffix = isFunc ? fnSuffix : enumSuffix;\n      var name = key; // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          helper.warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function (origFn) {\n            return function () {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    } // pass the modified enums to glEnumToString\n\n\n    enums.constructor = {\n      name: ext.constructor.name\n    };\n    utils.glEnumToString(enums, 0);\n  }\n\n  return ext;\n}\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\n\n\nvar supportedExtensions = ['ANGLE_instanced_arrays', 'EXT_blend_minmax', 'EXT_color_buffer_float', 'EXT_color_buffer_half_float', 'EXT_disjoint_timer_query', 'EXT_disjoint_timer_query_webgl2', 'EXT_frag_depth', 'EXT_sRGB', 'EXT_shader_texture_lod', 'EXT_texture_filter_anisotropic', 'OES_element_index_uint', 'OES_standard_derivatives', 'OES_texture_float', 'OES_texture_float_linear', 'OES_texture_half_float', 'OES_texture_half_float_linear', 'OES_vertex_array_object', 'WEBGL_color_buffer_float', 'WEBGL_compressed_texture_atc', 'WEBGL_compressed_texture_etc1', 'WEBGL_compressed_texture_pvrtc', 'WEBGL_compressed_texture_s3tc', 'WEBGL_compressed_texture_s3tc_srgb', 'WEBGL_depth_texture', 'WEBGL_draw_buffers'];\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existance of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\n\nfunction addExtensionsToContext(gl) {\n  for (var ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n * @private\n */\n\n\nfunction create3DContext(canvas, opt_attribs) {\n  var names = [\"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\n\n\nfunction getWebGLContext(canvas, opt_attribs) {\n  var gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\n\n\nfunction createContext(canvas, opt_attribs) {\n  var names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  var context = null;\n\n  for (var ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n\n      break;\n    }\n  }\n\n  return context;\n}\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\n\n\nfunction getContext(canvas, opt_attribs) {\n  var gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\n\n\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  var width = canvas.clientWidth * multiplier | 0;\n  var height = canvas.clientHeight * multiplier | 0;\n\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n\n  return false;\n}\n\n/***/ }),\n\n/***/ \"./src/typedarrays.js\":\n/*!****************************!*\\\n  !*** ./src/typedarrays.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.getGLTypeForTypedArray = getGLTypeForTypedArray;\nexports.getGLTypeForTypedArrayType = getGLTypeForTypedArrayType;\nexports.getTypedArrayTypeForGLType = getTypedArrayTypeForGLType;\nexports.isArrayBuffer = void 0;\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level shader typed array related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.typedArray` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/typedArray\n */\n// make sure we don't see a global gl\nvar gl = undefined; // eslint-disable-line\n\n/* DataType */\n\nvar BYTE = 0x1400;\nvar UNSIGNED_BYTE = 0x1401;\nvar SHORT = 0x1402;\nvar UNSIGNED_SHORT = 0x1403;\nvar INT = 0x1404;\nvar UNSIGNED_INT = 0x1405;\nvar FLOAT = 0x1406;\nvar UNSIGNED_SHORT_4_4_4_4 = 0x8033;\nvar UNSIGNED_SHORT_5_5_5_1 = 0x8034;\nvar UNSIGNED_SHORT_5_6_5 = 0x8363;\nvar HALF_FLOAT = 0x140B;\nvar UNSIGNED_INT_2_10_10_10_REV = 0x8368;\nvar UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nvar UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;\nvar FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nvar UNSIGNED_INT_24_8 = 0x84FA;\nvar glTypeToTypedArray = {};\n{\n  var tt = glTypeToTypedArray;\n  tt[BYTE] = Int8Array;\n  tt[UNSIGNED_BYTE] = Uint8Array;\n  tt[SHORT] = Int16Array;\n  tt[UNSIGNED_SHORT] = Uint16Array;\n  tt[INT] = Int32Array;\n  tt[UNSIGNED_INT] = Uint32Array;\n  tt[FLOAT] = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1] = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5] = Uint16Array;\n  tt[HALF_FLOAT] = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV] = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV] = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV] = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8] = Uint32Array;\n}\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArray instanceof Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw new Error('unsupported typed array type');\n}\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferView} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array) {\n    return BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8Array) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint8ClampedArray) {\n    return UNSIGNED_BYTE;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int16Array) {\n    return SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint16Array) {\n    return UNSIGNED_SHORT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Int32Array) {\n    return INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Uint32Array) {\n    return UNSIGNED_INT;\n  } // eslint-disable-line\n\n\n  if (typedArrayType === Float32Array) {\n    return FLOAT;\n  } // eslint-disable-line\n\n\n  throw new Error('unsupported typed array type');\n}\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\n\n\nfunction getTypedArrayTypeForGLType(type) {\n  var CTOR = glTypeToTypedArray[type];\n\n  if (!CTOR) {\n    throw new Error('unknown gl type');\n  }\n\n  return CTOR;\n}\n\nvar isArrayBuffer = typeof SharedArrayBuffer !== 'undefined' ? function isArrayBufferOrSharedArrayBuffer(a) {\n  return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof SharedArrayBuffer);\n} : function isArrayBuffer(a) {\n  return a && a.buffer && a.buffer instanceof ArrayBuffer;\n};\nexports.isArrayBuffer = isArrayBuffer;\n\n/***/ }),\n\n/***/ \"./src/utils.js\":\n/*!**********************!*\\\n  !*** ./src/utils.js ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.isWebGL1 = isWebGL1;\nexports.isWebGL2 = isWebGL2;\nexports.glEnumToString = void 0;\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n * @private\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\n\n\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc');\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @return {string} enum string or hex value\n * @memberOf module:twgl\n * @function glEnumToString\n */\n\n\nvar glEnumToString = function () {\n  var haveEnumsForType = {};\n  var enums = {};\n\n  function addEnums(gl) {\n    var type = gl.constructor.name;\n\n    if (!haveEnumsForType[type]) {\n      for (var key in gl) {\n        if (typeof gl[key] === 'number') {\n          var existing = enums[gl[key]];\n          enums[gl[key]] = existing ? \"\".concat(existing, \" | \").concat(key) : key;\n        }\n      }\n\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || \"0x\" + value.toString(16);\n  };\n}();\n\nexports.glEnumToString = glEnumToString;\n\n/***/ }),\n\n/***/ \"./src/v3.js\":\n/*!*******************!*\\\n  !*** ./src/v3.js ***!\n  \\*******************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.add = add;\nexports.copy = copy;\nexports.create = create;\nexports.cross = cross;\nexports.distance = distance;\nexports.distanceSq = distanceSq;\nexports.divide = divide;\nexports.divScalar = divScalar;\nexports.dot = dot;\nexports.lerp = lerp;\nexports.lerpV = lerpV;\nexports.length = length;\nexports.lengthSq = lengthSq;\nexports.max = max;\nexports.min = min;\nexports.mulScalar = mulScalar;\nexports.multiply = multiply;\nexports.negate = negate;\nexports.normalize = normalize;\nexports.setDefaultType = setDefaultType;\nexports.subtract = subtract;\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v3 = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\nvar VecType = Float32Array;\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n * @memberOf module:twgl/v3\n */\n\nfunction setDefaultType(ctor) {\n  var oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction create(x, y, z) {\n  var dst = new VecType(3);\n\n  if (x) {\n    dst[0] = x;\n  }\n\n  if (y) {\n    dst[1] = y;\n  }\n\n  if (z) {\n    dst[2] = z;\n  }\n\n  return dst;\n}\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n  return dst;\n}\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n  return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n  return dst;\n}\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} t Interpolation coefficients vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction lerpV(a, b, t, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\n  return dst;\n}\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction max(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n  dst[2] = Math.max(a[2], b[2]);\n  return dst;\n}\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\n\n\nfunction min(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n  dst[2] = Math.min(a[2], b[2]);\n  return dst;\n}\n/**\n * Mutiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n  return dst;\n}\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} dst.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n  return dst;\n}\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector a cross b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n  var t1 = a[2] * b[0] - a[0] * b[2];\n  var t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n  return dst;\n}\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\n\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction length(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distance(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\n\n\nfunction distanceSq(a, b) {\n  var dx = a[0] - b[0];\n  var dy = a[1] - b[1];\n  var dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\n\n\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n  var lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  var len = Math.sqrt(lenSq);\n\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n  return dst;\n}\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\n\n\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n  return dst;\n}\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n  return dst;\n}\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created..\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\n\n\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n  return dst;\n}\n\n/***/ }),\n\n/***/ \"./src/vertex-arrays.js\":\n/*!******************************!*\\\n  !*** ./src/vertex-arrays.js ***!\n  \\******************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.createVertexArrayInfo = createVertexArrayInfo;\nexports.createVAOAndSetAttributes = createVAOAndSetAttributes;\nexports.createVAOFromBufferInfo = createVAOFromBufferInfo;\n\nvar programs = _interopRequireWildcard(__webpack_require__(/*! ./programs.js */ \"./src/programs.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibily they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n\n  programInfos.forEach(function (programInfo) {\n    programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao\n  };\n}\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  var vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  programs.setAttributes(setters, attribs);\n\n  if (indices) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\n  } // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n\n\n  gl.bindVertexArray(null);\n  return vao;\n}\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n * @memberOf module:twgl/vertexArrays\n */\n\n\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=twgl-full.js.map","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \"{\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      // eslint-disable-next-line prefer-destructuring\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = modules[_i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = \"(\".concat(item[2], \") and (\").concat(mediaQuery, \")\");\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot).concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","\"use strict\";\n\nvar stylesInDom = {};\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nfunction listToStyles(list, options) {\n  var styles = [];\n  var newStyles = {};\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var css = item[1];\n    var media = item[2];\n    var sourceMap = item[3];\n    var part = {\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    };\n\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = {\n        id: id,\n        parts: [part]\n      });\n    } else {\n      newStyles[id].parts.push(part);\n    }\n  }\n\n  return styles;\n}\n\nfunction addStylesToDom(styles, options) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i];\n    var domStyle = stylesInDom[item.id];\n    var j = 0;\n\n    if (domStyle) {\n      domStyle.refs++;\n\n      for (; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j]);\n      }\n\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j], options));\n      }\n    } else {\n      var parts = [];\n\n      for (; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j], options));\n      }\n\n      stylesInDom[item.id] = {\n        id: item.id,\n        refs: 1,\n        parts: parts\n      };\n    }\n  }\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n\n  if (typeof options.attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      options.attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(options.attributes).forEach(function (key) {\n    style.setAttribute(key, options.attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  options.attributes = typeof options.attributes === 'object' ? options.attributes : {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  var styles = listToStyles(list, options);\n  addStylesToDom(styles, options);\n  return function update(newList) {\n    var mayRemove = [];\n\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i];\n      var domStyle = stylesInDom[item.id];\n\n      if (domStyle) {\n        domStyle.refs--;\n        mayRemove.push(domStyle);\n      }\n    }\n\n    if (newList) {\n      var newStyles = listToStyles(newList, options);\n      addStylesToDom(newStyles, options);\n    }\n\n    for (var _i = 0; _i < mayRemove.length; _i++) {\n      var _domStyle = mayRemove[_i];\n\n      if (_domStyle.refs === 0) {\n        for (var j = 0; j < _domStyle.parts.length; j++) {\n          _domStyle.parts[j]();\n        }\n\n        delete stylesInDom[_domStyle.id];\n      }\n    }\n  };\n};","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./style.css\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"body {\\n  padding: 200px;\\n}\\n#textbox-1 {\\n  background-color: transparent;\\n  width: calc( 100vw - 600px);\\n  height: calc(100px);\\n  cursor: text;\\n}\\n\\n.menu-bar {\\n  width: 100vw;\\n  height: 60px;\\n  background-color: pink;\\n}\\n\\n.contents-box {\\n  position: relative;\\n  width: 100vw;\\n  height: calc( 100vh - 60px);\\n}\\n\\n.editor-box {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  width: 600px;\\n  height: 100%;\\n  background-color: springgreen;\\n\\n  display: flex;\\n  flex-direction: column;\\n  align-items: flex-start;\\n  justify-content: flex-start;\\n}\\n\\n\\n.button {\\n  font-size: 30px;\\n  background-color: aquamarine;\\n  cursor: pointer;\\n}\\n\\ncanvas {\\n  z-index: -1;\\n}\", \"\"]);\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!./reset.css\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"/* http://meyerweb.com/eric/tools/css/reset/ \\n   v2.0 | 20110126\\n   License: none (public domain)\\n*/\\n\\nhtml, body, div, span, applet, object, iframe,\\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\\na, abbr, acronym, address, big, cite, code,\\ndel, dfn, em, img, ins, kbd, q, s, samp,\\nsmall, strike, strong, sub, sup, tt, var,\\nb, u, i, center,\\ndl, dt, dd, ol, ul, li,\\nfieldset, form, label, legend,\\ntable, caption, tbody, tfoot, thead, tr, th, td,\\narticle, aside, canvas, details, embed, \\nfigure, figcaption, footer, header, hgroup, \\nmenu, nav, output, ruby, section, summary,\\ntime, mark, audio, video {\\n\\tmargin: 0;\\n\\tpadding: 0;\\n\\tborder: 0;\\n\\tfont-size: 100%;\\n\\tfont: inherit;\\n\\tvertical-align: baseline;\\n}\\n/* HTML5 display-role reset for older browsers */\\narticle, aside, details, figcaption, figure, \\nfooter, header, hgroup, menu, nav, section {\\n\\tdisplay: block;\\n}\\nbody {\\n\\tline-height: 1;\\n}\\nol, ul {\\n\\tlist-style: none;\\n}\\nblockquote, q {\\n\\tquotes: none;\\n}\\nblockquote:before, blockquote:after,\\nq:before, q:after {\\n\\tcontent: '';\\n\\tcontent: none;\\n}\\ntable {\\n\\tborder-collapse: collapse;\\n\\tborder-spacing: 0;\\n}\", \"\"]);\n","import * as twgl from 'twgl.js';\n\n\nconst defaults = {\n  padding: 30\n};\n\n\nexport function findGlyph(fontList, char) {\n  return fontList.find((font)=> font.name === char.style.font).glyphs[char.letter];\n};\n\n\n// called by input event from editing tab\nfunction setCharStyle(charList) {\n  // A. !charList (No argument)\n  // create & set temporary style in textbox\n\n  // B. charList\n  // set styles of chars in charList\n  \n}\n\n\n\nfunction addLine (textbox, cursor) {\n\n  // A. Have chars on right\n  // take chars on right\n  // push it to line\n\n  // B. Not have chars on right\n  // create char(letter:null) with prevChar.style\n  // push it to line\n\n};\n\n\n\nfunction createChar (letter) {\n  const char = {\n    letter,\n  };\n  return char;\n};\n\n\n\nexport function addChar (textbox, cursor, char) {\n\n  // A. Char has style\n  // if (char has font+params) use them\n  // push char\n  // iChar ++\n\n\n  // prevChar \n\n  // B-1 Empty line char(letter: null)\n  // if (!prevChar.letter) simply assign letter \n  \n  // B-2 iChar = 0\n  // if (!prevChar) get from char on the right\n  // push char\n  // iChar ++\n\n  // B-3 iChar > 0\n  // refer to prevChar for style\n  // push char\n  // iChar ++\n  \n  \n};\n\n\n\n\n\n\nfunction getLinesTotalHeight(textbox) {\n\n  let linesTotalHeight = 0;\n\n  // Loop through lines\n  textbox.lineList.forEach((line) => {\n\n    const lastLine = textbox.lineList[textbox.lineList.length-1];\n\n    // Get lineHeight\n    let lineHeight = 0;\n    lastLine.charList.forEach((char) => {\n      if (lineHeight < char.position.height) lineHeight = char.position.height;\n    })\n    linesTotalHeight += lineHeight;\n  });\n\n  return linesTotalHeight;\n  \n  \n  \n  //return totalHeight\n  return lastLine.charList[0].position.y + lineHeight;\n};\n\n\n\nexport function setCharPositions (textbox, fontList) {\n\n  \n  // Get textbox width & height\n  const element = document.getElementById(textbox.id);\n  const rect = element.getBoundingClientRect();\n\n  const textboxWidth = rect.width // Textbox dimensions in px\n  ,     textboxHeight = rect.height\n  ,     maxWidth = 100 - textbox.paddingX * 2 // (Textbox dimensions - padding) in textbox width percent\n  ,     maxHeight = textboxHeight / textboxWidth * 100 - textbox.paddingY * 2;\n  \n  let sublineY = 0;\n  \n  //  * - - - - - - - - - - - *\n  //  |   |   |   |   |   |   |  Line\n  //  * - - - - - - - - - - - *\n  textbox.lineList.forEach((line, iLine, lineList) => {\n\n    let charX = 0\n    ,   sublineIndex = 0\n    ,   sublineHeight = 0;\n\n    let nextStepY = 0;\n    \n    //  * - *\n    //  |   |  Char\n    //  * - *\n    line.charList.forEach((char, iChar) => {\n\n      // Set char position\n      char.position = { // give width 0 if no character (char.letter === null)\n        sublineIndex,\n        sublineY,\n        // sublineHeight,\n        charWidth: char.letter ? char.style.size / findGlyph(fontList, char).ratio : 0, \n        charHeight: char.style.size, \n        charX,\n        charY: sublineY\n      };\n\n      // Update charX\n      charX += char.position.charWidth + char.position.charWidth * char.style.tracking;\n      // Update sublineHeight\n      if (sublineHeight < char.position.charHeight) sublineHeight = char.position.charHeight;\n      // Update nextSublineY\n      if (nextStepY < char.position.charHeight * char.style.leading) nextStepY = char.position.charHeight * char.style.leading;\n\n      // Wrap line\n      const nextChar = line.charList[iChar+1];\n      if (line.wrapLine && nextChar) { \n        const nextCharWidth = nextChar.style.size / findGlyph(fontList, nextChar).ratio;\n        console.log('nextCharWidth');\n        // OverflowX --> linebreak!\n        if (charX + nextCharWidth > maxWidth ) {\n          // Set sublineHeight of chars in this subline\n          const sublineCharList = line.charList.filter((char) => char.position && char.position.sublineIndex === sublineIndex);\n          sublineCharList.forEach((char) => {\n            char.position.sublineHeight = sublineHeight;\n          });\n          // update sublineY\n          sublineY += nextStepY;\n          // reset charX & nextStepY\n          charX = nextStepY = 0;\n          // reset sublineHeight\n          sublineHeight = 0;\n          // increment sublineCount\n          sublineIndex++; \n        } \n      }\n\n    }); // End of char loop\n\n    // Set sublineHeight of chars in this subline\n    const sublineCharList = line.charList.filter((char) => char.position && char.position.sublineIndex === sublineIndex);\n    sublineCharList.forEach((char) => {\n      char.position.sublineHeight = sublineHeight;\n    });\n\n    const lastChar = line.charList[line.charList.length-1];\n    const lineWidth = lastChar.position.charX + lastChar.position.charWidth;\n\n    // Shrink line\n    if (lineWidth > maxWidth) {\n      line.charList.forEach((char, iChar, charList) => {\n        char.position.charX *= maxWidth / lineWidth;\n        char.position.charWidth *= maxWidth / lineWidth;\n        char.position.charHeight *= maxWidth / lineWidth;\n        char.position.sublineHeight *= maxWidth / lineWidth;\n      });\n      nextStepY *= maxWidth / lineWidth;\n    } \n    \n    // Horizontal align\n    else {\n      // Loop through sublines\n      line.charList.forEach((char, iChar) => {\n        const nextChar = line.charList[iChar+1];\n        const isLastCharOfSubline = nextChar && char.position.sublineIndex !== nextChar.position.sublineIndex;\n        const isLastCharOfLine = !nextChar;\n        if ( isLastCharOfSubline || isLastCharOfLine ) {\n          const thisSublineIndex = char.position.sublineIndex;\n          const sublineWidth = char.position.charX + char.position.charWidth;\n          console.log(sublineWidth, maxWidth);\n          const horizontalRemainder = maxWidth - sublineWidth;\n          const sublineCharList = line.charList.filter((char) => char.position.sublineIndex === thisSublineIndex);\n\n          // Repositoin chars based on line's horizontalAlign\n          switch (line.horizontalAlign) {\n            case 'LEFT':\n              break;\n            case 'CENTER':\n              sublineCharList.forEach((char) => {\n                char.position.charX += horizontalRemainder/2;\n              });\n              break;\n            case 'RIGHT':\n              sublineCharList.forEach((char) => {\n                char.position.charX += horizontalRemainder;\n              })\n              break;\n            case 'SPREAD':\n              // gap = 0 when only 1 char\n              const gap = sublineCharList.length-1 ? horizontalRemainder / (sublineCharList.length-1) : 0;\n              sublineCharList.forEach((char, iChar) => {\n                char.position.charX += gap * iChar;\n              });\n              break;\n          }\n        }\n      });\n    }\n\n    // update sublineY\n    sublineY += nextStepY;\n    // Reset sublineIndex\n    sublineIndex = 0;\n\n  }); // End of line loop\n  \n\n  const lastLine = textbox.lineList[textbox.lineList.length-1];\n  const lastCharOfLastLine = lastLine.charList[lastLine.charList.length-1];\n  const linesTotalHeight = lastCharOfLastLine.position.sublineY + lastCharOfLastLine.position.sublineHeight;\n  \n  // LinesTotalHeight shorter than textbox\n  if (maxHeight > linesTotalHeight) {\n    // Vertical align\n    const verticalRemainder = maxHeight - linesTotalHeight;\n\n    textbox.lineList.forEach((line, iLine) => {\n      // Repositoin chars based on texbox's verticalAlgin\n      switch (textbox.verticalAlign) {\n        case 'TOP':\n          break;\n        case 'CENTER':\n          line.charList.forEach((char) => {\n            char.position.charY += verticalRemainder/2;\n            char.position.sublineY += verticalRemainder/2;\n          });\n          break;\n        case 'BOTTOM':\n          line.charList.forEach((char) => {\n            char.position.charY += verticalRemainder;\n            char.position.sublineY += verticalRemainder;\n          })\n          break;\n        case 'SPREAD':\n          // gap = 0 when only 1 line\n          const gap = textbox.lineList.length-1 ? verticalRemainder / (textbox.lineList.length-1) : 0;\n          line.charList.forEach((char) => {\n            char.position.charY += gap * iLine;\n            char.position.sublineY += gap * iLine;\n          });\n          break;\n      }\n    });\n  }\n\n  // OverflowY\n  else {\n    // Stretch textbox height to fit lines\n    const newTextboxHeightPixels = (linesTotalHeight + textbox.paddingY * 2) / 100 * textboxWidth;\n    document.getElementById(textbox.id).style.height = newTextboxHeightPixels + 'px';\n  }\n\n  // add paddingX and paddingY to charX/Y and sublineY\n  textbox.lineList.forEach((line, iLine, lineList) => {\n    line.charList.forEach((char, iChar, charList) => {\n      char.position.charX += textbox.paddingX;\n      char.position.charY += textbox.paddingY;\n      char.position.sublineY += textbox.paddingY;\n    });\n  });\n\n\n};\n\n\n\n\n\nexport function setRenderInfos(gl, textbox, fontList) {\n\n  // Get textbox width & height\n  const element = document.getElementById(textbox.id);\n  const rect = element.getBoundingClientRect();\n\n  const textboxWidth = rect.width // Textbox dimensions in px\n  ,     textboxHeight = rect.height;\n\n  textbox.lineList.forEach((line, iLine, lineList) => {\n    line.charList.forEach((char) => {\n      const charWidthPixels = char.position.charWidth / 100 * textboxWidth;\n      const charHeightPixels = char.position.charHeight / 100 * textboxWidth;\n      const charXPixels = char.position.charX / 100 * textboxWidth;\n      const charYPixels = char.position.charY / 100 * textboxWidth;\n      const glyph = findGlyph(fontList, char);\n      char.renderInfo = {\n        bufferInfo: twgl.primitives.createPlaneBufferInfo(gl, charWidthPixels, charHeightPixels, 1, 1, twgl.m4.multiply(twgl.m4.translation(twgl.v3.create(charXPixels + charWidthPixels/2, charYPixels + charHeightPixels/2, 0)),twgl.m4.rotationX(Math.PI/2))),\n        uniforms: {\n          u_matrix: twgl.m4.ortho(0, textboxWidth, textboxHeight, 0, 400, -400),\n          u_rand: twgl.v3.create(Math.random(), Math.random(), Math.random())\n        }\n      };\n    });\n  });\n};\n\n\n\n\n\n\n// Challenges:\n// 1. join two lines after delete\n// 2. multiple line copy --> clipboard = linelist (not just characters)\n// 3. empty line setting retainment \n//    --> (X) first char typed get params from last char of prev line\n//    --> (O) letter: null, font, params, position\n// 4. Char size 100 + padding>0 + wrapLine=true\n//    --> Force wrapLine = false\n","import * as twgl from 'twgl.js';\nimport * as tm from './textModule.js';\n\nfunction setCanvasWidth(canvas, width) {canvas.style.width = width + 'px'};\nfunction setCanvasHeight (canvas, height) {canvas.style.height = height + 'px'};\nexport function setCanvasSize (canvas, width, height) {setCanvasWidth(canvas, width); setCanvasHeight(canvas, height);};\n\n\n\n\n// export function\n\nexport function appendFullSizeCanvas (canvas, parent) {\n  \n  // Set full screen relative to viewport\n  let width, height;\n  if (parent === window) {\n    width = window.innerWidth;\n    height = window.innerHeight;\n    setCanvasSize(canvas, width, height);\n    canvas.style.position = 'fixed';\n    document.body.appendChild(canvas);\n  } else {\n    const rect = parent.getBoundingClientRect();\n    width = rect.width;\n    height = rect.height;\n    setCanvasSize(canvas, width, height);\n    canvas.style.position = 'absolute';\n    parent.appendChild(canvas);\n  }\n  canvas.style.top = '0px';\n  canvas.style.left = '0px';\n};\n\n\n\n\n\n\nexport function createWebGLContext (canvas) {\n  const glOptions = {antialias: true, alpha: true, depth: true, stencil: false, preserveDrawingBuffer: false, premultipliedAlpha: false};\n  let gl;\n  try { gl = canvas.getContext('experimental-webgl', glOptions); } catch (e) {}\n  try { gl = gl || canvas.getContext('webgl', glOptions); } catch (e) {}\n  gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n  gl.enable(gl.BLEND);\n  return gl;\n};\n\n\nfunction getRelativeBoundingRect(element, canvas) {\n  \n  const rect = element.getBoundingClientRect();\n  const canvasRect = canvas.getBoundingClientRect();\n  const relativeRect = {\n    left: rect.left - canvasRect.left,\n    right: rect.right - canvasRect.left,\n    top: rect.top - canvasRect.top,\n    bottom: rect.bottom - canvasRect.top\n  };\n  return relativeRect;\n}\n\nexport function setViewPort (gl, textbox, pixelRatio) {\n  // Return false if rect off viewport\n  const element = document.getElementById(textbox.id);\n\n  // No matching element (there's just data)\n  if (!element) return false;\n  const rect = getRelativeBoundingRect(element, gl.canvas);\n  \n  // Element out of viewport\n  if (rect.bottom < 0 || rect.top  > gl.canvas.clientHeight ||\n    rect.right  < 0 || rect.left > gl.canvas.clientWidth) {\n    return false;\n  }\n\n  // Set viewport and Scissor (NEEDS CLARIFICATION - gl.BUFFER_BIT, clearColor)\n  const width  = (rect.right - rect.left) * pixelRatio;\n  const height = (rect.bottom - rect.top) * pixelRatio;\n  const left   = rect.left * pixelRatio;\n  const bottom = (gl.canvas.clientHeight - rect.bottom) * pixelRatio; // -1 ?\n  gl.enable(gl.SCISSOR_TEST);\n  gl.viewport(left, bottom, width, height);\n  gl.scissor(left, bottom, width, height);\n  return true;\n};\n\n\n\n\n\nexport function createVerticalAlignSetter (gl, fontList, textbox, value) {\n  return function () {\n    textbox.verticalAlign = value;\n    tm.setCharPositions(textbox, fontList);\n    tm.setRenderInfos(gl, textbox, fontList);\n  }\n};\n\nexport function createHorizontalAlignSetter (gl, fontList, textbox, value) {\n  return function () {\n    if (!textbox.cursor) return;\n    textbox.lineList[textbox.cursor.iLine].horizontalAlign = value;\n    tm.setCharPositions(textbox, fontList);\n    tm.setRenderInfos(gl, textbox, fontList);\n  };\n};\n\nexport function createWrapLineSetter (gl, fontList, textbox) {\n  return function () {\n    if (!textbox.cursor) return;\n    textbox.lineList[textbox.cursor.iLine].wrapLine = !textbox.lineList[textbox.cursor.iLine].wrapLine;\n    tm.setCharPositions(textbox, fontList);\n    tm.setRenderInfos(gl, textbox, fontList);\n  };\n};\n\n\nfunction checkKeyInputValid (key) {return 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890.,:;!?/@#$%&()'.includes(key)};\n\nexport function initiateKeyListeners(gl, textboxList, fontList) {\n  window.addEventListener('keydown', (event) => {\n    textboxList.forEach((textbox) => {\n      if (!textbox.cursor) return;\n\n      const cursor = textbox.cursor;\n\n      if (event.key === 'Enter') {\n        // Following Chars\n        const thisLine = textbox.lineList[cursor.iLine];\n\n        // Copy this line\n        const thisLineCopy = {...thisLine};\n\n        const prevChar = thisLine.charList[cursor.iChar-1];\n        const thisChar = thisLine.charList[cursor.iChar];\n\n        const charListOnRight = thisLine.charList.splice(cursor.iChar);\n        \n        // Not end of line -> carry chars to next line\n        if (charListOnRight.length > 0) {\n          thisLineCopy.charList = charListOnRight;\n        } \n        // End of line -> carry placeholder to next line\n        else {\n          const prevCharAsPlaceholder = {\n            letter: null,\n            style: {...prevChar.style}\n          };\n          thisLineCopy.charList = [prevCharAsPlaceholder];\n        }\n\n        // Beginning of line -> leave placeholder\n        if (cursor.iChar === 0) {\n          const thisCharAsPlaceHolder = {\n            letter: null,\n            style: {...thisChar.style}\n          }\n          thisLine.charList.push(thisCharAsPlaceHolder);\n        }\n\n        // Inserrt new line & increment cursor\n        textbox.lineList.splice(cursor.iLine+1, 0, thisLineCopy);\n        cursor.iLine ++;\n        cursor.iChar = 0;\n        \n      }\n      else if (event.key === 'Backspace') {\n\n        const prevLine = textbox.lineList[cursor.iLine-1];\n        const thisLine = textbox.lineList[cursor.iLine];\n\n        const prevChar = textbox.lineList[cursor.iLine].charList[cursor.iChar-1];\n        // There's prevChar\n        if (prevChar && prevChar.letter !== null) {\n          cursor.iChar--;\n          const removedChar = thisLine.charList.splice(cursor.iChar, 1)[0];\n          \n          // Resulting line empty -> leave placeholder\n          if (thisLine.charList.length === 0) {\n            const removedCharAsPlaceHolder = {\n              letter: null,\n              style: {...removedChar.style}\n            }\n            thisLine.charList.push(removedCharAsPlaceHolder);\n          }\n        }\n        // There's NO prevChar (Beginning of line)\n        else {\n\n          // No prev line\n          if (!prevLine) return;\n\n          // If thisLine contains placeholder (letter: null) remove it\n          if (thisLine.charList[0].letter === null) thisLine.charList.splice(0,1);\n\n          // Else if prevLine contains placeholder (letter:null) remove it \n          // (else if = in case of two empty lines, keep prevLine's placeholder)\n          else if (prevLine.charList[0].letter === null) prevLine.charList.splice(0,1);\n\n          // Create mergedCharList\n          const mergedCharList = prevLine.charList.concat(thisLine.charList);\n\n          // Remove current line\n          textbox.lineList.splice(cursor.iLine, 1);\n\n          // Reposition cursor\n          cursor.iLine--;\n          cursor.iChar = textbox.lineList[cursor.iLine].charList.length;\n\n          // Replace prev line's charList by mergedCharList\n          textbox.lineList[cursor.iLine].charList = mergedCharList;\n\n        }\n      }\n      else if(checkKeyInputValid(event.key)) {\n\n        const prevChar = textbox.lineList[cursor.iLine].charList[cursor.iChar-1];\n        const nextChar = textbox.lineList[cursor.iLine].charList[cursor.iChar];\n\n        // Get style from prevChar (nextChar if beginning of line)\n        let styleCopy;\n        if (prevChar) {\n          styleCopy = Object.assign({}, prevChar.style);\n        } else {\n          styleCopy = Object.assign({}, nextChar.style);\n        }\n\n        // If placeholder char (letter: null) is there, take its place\n        if (prevChar && prevChar.letter === null || nextChar && nextChar.letter === null) {\n          textbox.lineList[cursor.iLine].charList.splice(0, 1);\n          cursor.iChar = 0;\n        }\n\n        // Insert char, increment cursor.iChar\n        textbox.lineList[cursor.iLine].charList.splice(cursor.iChar, 0, {\n          letter: 'B',\n          style: styleCopy\n        });\n        cursor.iChar++;\n      }\n  \n      // Set position\n      tm.setCharPositions(textbox, fontList);\n      // Set renderInfso\n      tm.setRenderInfos(gl, textbox, fontList);\n    });\n    \n  });\n}\n\n\n\nexport function drawChar (gl, char) {\n  \n};\n\nexport function drawCursor (time, startTime) {\n  \n};\n\n\n\n\n\nfunction getCanvasWidth () {return parseInt(canvas.style.width)};\nfunction getCanvasHeight () {return parseInt(canvas.style.height)};\n\n\n  ","export default \"attribute vec4 a_position;\\n \\nuniform mat4 u_matrix;\\n\\nvoid main() {\\n  // Multiply the position by the matrix.\\n  // gl_Position =  u_matrix * a_position;\\n  gl_Position =  u_matrix * a_position;\\n}\"","export default \"#extension GL_OES_standard_derivatives : enable\\n  \\nprecision highp float;\\n// uniform sampler2D texture;\\nvarying vec2 coord;\\n\\nuniform float u_dTime;\\n\\n\\nvoid main() {\\n  \\n  gl_FragColor = vec4(1. , 1., 1., abs(cos(u_dTime/400.)* 1.2));\\n}\"","\"use strict\";\n\nimport * as twgl from 'twgl.js';\n\nimport * as rm from './modules/rendererModule.js';\nimport * as tm from './modules/textModule.js';\n\nimport cursorVert from './glsl/cursor.vert';\nimport cursorFrag from './glsl/cursor.frag';\n\n\nconst Renderer = function() {\n\n  // Mutable state\n  const state = {\n    textboxList: [], //initially empty\n    fontList: [], //initially empty\n    mouseX: null,\n    mouseY: null,\n    mousePressed: false,\n    shiftPressed: false,\n    pixelRatio: 1.5,\n    \n  }\n  \n  // Canvas\n  const canvas = document.createElement('canvas');\n  \n  // Append canvas to parent and set full size\n  this.setContainer = function(parent) {\n    rm.appendFullSizeCanvas(canvas, parent);\n  }\n  \n  \n  // gl\n  const gl = rm.createWebGLContext(canvas);\n  if (! gl) {document.write('No WebGL support. Please use a modern browser.'); return; }\n\n  // Set defaults\n  twgl.setDefaults({attribPrefix: 'a_'});\n  gl.getExtension('OES_standard_derivatives');\n\n  twgl.resizeCanvasToDisplaySize(canvas, state.pixelRatio);\n\n  // Load textdata\n  this.feedData = function(textData, fontData) {\n    // Load text\n    state.textboxList = textData;\n    // Load fonts\n    state.fontList = fontData;\n\n    // Insert programInfo into glyphs\n    state.fontList.forEach((font) => {\n      Object.keys(font.glyphs).forEach((key) => {\n        const glyph = font.glyphs[key];\n        if (!glyph.programInfo) glyph.programInfo = twgl.createProgramInfo(gl, [glyph.vert, glyph.frag]);\n      });\n    });\n\n    state.textboxList.forEach((textbox)=>{\n      // Set position\n      tm.setCharPositions(textbox, state.fontList);\n      // Set renderInfo\n      tm.setRenderInfos(gl, textbox, state.fontList);\n    });\n\n    // Attach listeners\n    state.textboxList.forEach((textbox) => {\n      const element = document.getElementById(textbox.id);\n      const rect = element.getBoundingClientRect();\n      element.addEventListener('mousedown', (event) => {\n        const clickX = event.offsetX / rect.width * 100;\n        const clickY = event.offsetY / rect.width * 100;\n        console.log(clickX, clickY);\n\n        let cursor = {\n          iLine: 0,\n          iChar: 0\n        };\n\n        textbox.lineList.some((line, iLine) => {\n          // cursorSublineIndex\n          let cursorSublineIndex = 0;\n          line.charList.some((char, iChar) => {\n            if (clickY < char.position.sublineY + char.position.sublineHeight) {\n              cursorSublineIndex = char.position.sublineIndex;\n              return true;\n            } else return false;\n          });\n\n          const lineBottom = line.charList[line.charList.length-1].position.sublineY + line.charList[line.charList.length-1].position.sublineHeight;\n          const stopLine = clickY < lineBottom;\n          if (stopLine) {\n            Object.assign(cursor, {iLine});\n            line.charList.some((char, iChar) => {\n              const stopChar = clickY < char.position.sublineY + char.position.sublineHeight\n                            && clickX < char.position.charX + char.position.charWidth * (1 + char.style.tracking) / 2;\n              if (stopChar) {\n                Object.assign(cursor, {iChar});\n                return true;\n              }\n              else {\n                // Handle end of subline\n                Object.assign(cursor, {\n                  iChar\n                });\n                if (cursorSublineIndex < char.position.sublineIndex) return true;\n\n                // Handle end of line\n                if (iChar === line.charList.length-1) {\n                  Object.assign(cursor, {iChar: iChar+1});\n                }\n                return false;\n              }\n            });\n            return true;\n          }\n          else {\n            return false;\n          }\n        });\n        \n        const clickDate = new Date();\n        Object.assign(cursor, {clickTime:clickDate.getTime()});\n        console.log(cursor);\n        Object.assign(textbox, {cursor});\n      });\n    });\n\n    rm.initiateKeyListeners(gl, state.textboxList, state.fontList);\n  };\n\n\n\n\n  // Start looping\n  this.start = function() {\n    requestAnimationFrame(loop);\n  };\n\n\n  function loop (time) {\n\n    twgl.resizeCanvasToDisplaySize(gl.canvas, state.pixelRatio);\n    \n\n    // Clear color (NEEDS CLARIFICATION - gl.BUFFER_BIT, clearColor)\n    gl.enable(gl.DEPTH_TEST);\n    gl.disable(gl.SCISSOR_TEST);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Iterate through textboxList\n    state.textboxList.forEach((textbox) => {\n\n      // Set viewport and Scissor (NEEDS CLARIFICATION - gl.BUFFER_BIT, clearColor)\n      if (!rm.setViewPort(gl, textbox, state.pixelRatio)) return; // \n      gl.clearColor(1, 0, 0.6, 1);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      // Iterate through lineList\n      textbox.lineList.forEach((line) => {\n\n        // Iterate through charList\n        line.charList.forEach((char) => {\n          // Draw char\n\n          if (!char.letter) return;\n\n          // Get programInfo from font\n          const programInfo = tm.findGlyph(state.fontList, char).programInfo;\n          gl.useProgram(programInfo.program);\n          \n          // Get uniforms and buffers from char\n          twgl.setBuffersAndAttributes(gl, programInfo, char.renderInfo.bufferInfo);\n          twgl.setUniforms(programInfo, char.renderInfo.uniforms);\n\n          twgl.drawBufferInfo(gl, char.renderInfo.bufferInfo);\n        });\n      });\n\n      // Draw cursor\n      if (textbox.cursor) {\n        \n\n        let bufferInfo;\n        // Get textbox width & height\n        const element = document.getElementById(textbox.id);\n        const rect = element.getBoundingClientRect();\n\n        const textboxWidth = rect.width // Textbox dimensions in px\n        ,     textboxHeight = rect.height;\n        // buffer\n        const thisLine = textbox.lineList[textbox.cursor.iLine];\n        const firstChar = thisLine.charList[0]\n        const prevChar = thisLine.charList[textbox.cursor.iChar-1];\n        if (prevChar) {\n          const cursorHeightPixels = prevChar.position.charHeight / 100 * textboxWidth;\n          const cursorXPixels = (prevChar.position.charX + prevChar.position.charWidth * (1+prevChar.style.tracking)) / 100 * textboxWidth;\n          const cursorYPixels = prevChar.position.charY / 100 * textboxWidth;\n          bufferInfo = twgl.primitives.createPlaneBufferInfo(gl, 3, cursorHeightPixels *1.1, 1, 1, twgl.m4.multiply(twgl.m4.translation(twgl.v3.create(cursorXPixels, cursorYPixels + cursorHeightPixels/2, -0.001)),twgl.m4.rotationX(Math.PI/2)));\n        } \n        else {\n          const cursorHeightPixels = firstChar.position.charHeight / 100 * textboxWidth;\n          const cursorXPixels = firstChar.position.charX / 100 * textboxWidth;\n          const cursorYPixels = firstChar.position.charY / 100 * textboxWidth;\n          bufferInfo = twgl.primitives.createPlaneBufferInfo(gl, 3, cursorHeightPixels *1.1, 1, 1, twgl.m4.multiply(twgl.m4.translation(twgl.v3.create(cursorXPixels, cursorYPixels + cursorHeightPixels/2, -0.001)),twgl.m4.rotationX(Math.PI/2)));\n        }\n\n        const programInfo = twgl.createProgramInfo(gl, [cursorVert, cursorFrag]);\n\n        const currentDate = new Date();\n        const uniforms = {\n          u_matrix: twgl.m4.ortho(0, textboxWidth, textboxHeight, 0, 400, -400),\n          u_dTime: currentDate.getTime() - textbox.cursor.clickTime\n        };\n\n        gl.useProgram(programInfo.program);\n          \n        // Get uniforms and buffers from char\n        twgl.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n        twgl.setUniforms(programInfo, uniforms);\n\n        twgl.drawBufferInfo(gl, bufferInfo);\n      }\n    });\n\n    requestAnimationFrame(loop);\n  }\n\n  this.setButtons = function() {\n    const buttonIdList = [\n      'vertical-top', 'vertical-center', 'vertical-bottom', 'vertical-spread',\n      'horizontal-left', 'horizontal-center', 'horizontal-right', 'horizontal-spread',\n      'wrapLine'\n    ];\n\n    // Add listeners\n    state.textboxList.forEach((textbox) => {\n      buttonIdList.forEach((buttonId) => {\n        const button = document.getElementById(`${textbox.id}-${buttonId}`);\n        if (!button) return;\n\n        if (buttonId.includes('vertical')) {\n          const value = buttonId.split('-')[1].toUpperCase();\n          button.addEventListener('mousedown', rm.createVerticalAlignSetter(gl, state.fontList, textbox, value));\n        } else if (buttonId.includes('horizontal')) {\n          const value = buttonId.split('-')[1].toUpperCase();\n          button.addEventListener('mousedown', rm.createHorizontalAlignSetter(gl, state.fontList, textbox, value));\n        } else if (buttonId.includes('wrapLine')) {\n          button.addEventListener('mousedown', rm.createWrapLineSetter(gl, state.fontList, textbox));\n        }\n      });\n    });\n    \n    \n  };\n\n  this.setCursor = function() {\n    // set cursor \n  };\n\n\n// first click on text\n// 1. get subline whose centerline is nearest\n// 2. get index\n\n// subline position\n// -- centerline y\n// -- \n  \n\n\n// Function call:\n// 1. Loop\n// 2. Events\n\n\n\n\n\n  \n  // // Events\n  // canvas.addEventListener('mousemove', (event) => {\n  //   state.mouseX = event.offsetX;\n  //   state.mouseY = event.offsetY;\n  // });\n  // canvas.addEventListener('mouseenter', () => {\n  //   // console.log('mouseenter');\n  // });\n  // canvas.addEventListener('mouseleave', () => {\n  //   // console.log('mouseleave');\n  //   state.mouseX = null;\n  //   state.mouseY = null;\n  // });\n  // canvas.addEventListener('mousedown', () => {\n  //   // console.log('mousedown');\n  //   state.mousePressed = true;\n  // });\n  // canvas.addEventListener('mouseup', () => {\n  //   // console.log('mouseup');\n  //   mousePressed = false;\n  // });\n\n  // window.addEventListener('keydown', (event)=>{\n  //   if (event.key === 'Shift') state.shiftPressed = true;\n\n  //   // If not valid key, return\n  //   if (!rm.checkKeyInputValid(event.key)) return;\n  //   // If valid key\n  //   state.textList.forEach((text) => {\n  //     // console.log(text);\n  //     if (text.cursorIndex === null) return;\n      \n  //     this.addGlyphToText(this.createGlyph(event.key), text);\n  //   });\n    \n  // });\n  // window.addEventListener('keyup', (event)=>{\n  //   if (event.key === 'Shift') state.shiftPressed = false;\n  //   // const newChar = text.createGlyph({char: event.key});\n  //   // text.addChar(text.createGlyph(newChar));\n  //   // console.log(event);\n  // });\n\n\n  // // Text\n  // /* \n  //   {\n  //     glyphList: [],\n  //     position: \n  //   }\n  // */\n  // this.createText = (options) => ({\n  //   glyphList: [],\n  //   position: twgl.v3.create(),\n  //   textAlign: 'CENTER',\n  //   padding: 30,\n  //   width: this.padding * 2,\n  //   height: this.padding * 2, // hmm\n\n  //   // Controls\n  //   isEditable: false,\n  //   mouseHovering: false,\n  //   cursorIndex: options.hasOwnProperty('cursorIndex') ? options.cursorIndex : null, // after mouse down\n  //   dragToIndex: null\n  // });\n\n  // this.setPositionText = (text, position) => {\n  //   text.position = position;\n  // };\n\n  // this.alignText = (text, align) => {\n  //   switch (align) {\n  //     case 'CENTER':\n  //       break;\n  //     case 'LEFT':\n  //       break;\n  //     case 'RIGHT':\n  //       break;\n  //     default:\n  //       console.log('Invalid text align value');\n  //       break;\n  //   }\n  // };\n\n  // this.calcTextTotalWidth = (text) => {\n  //   if (!text.glyphList.length) return text.padding * 2;\n  //   let totalWidth = 0;\n  //   text.glyphList.forEach((glyph) => {\n  //     totalWidth += glyph.width;\n  //   });\n  //   return totalWidth;\n  // };\n  \n  // this.calcTextTotalHeight = (text) => {\n  //   let totalHeight = text.glyphList[0].height;\n  //   return totalHeight;\n  // };\n\n  // this.checkTextMouseHovering = (text) => {\n  //   if (mouseX === null) return false;\n  //   // Only when aligned center \n  //   // (position should be left edge of text when left aligned)\n  //   if (mouseX > text.position[0] - (text.width/2) &&\n  //       mouseX < text.position[0] + (text.width/2) &&\n  //       mouseY > text.position[1] - (text.height/2) &&\n  //       mouseY < text.position[1] + (text.height/2)) {\n  //     return true;\n  //   } \n  //   return false;\n  // };\n  \n  // // Position of glyph is used in \n  // // Selection index\n  // // Buffer creation\n\n  // this.createGlyph = (char, font) => ({\n  //   char,\n  //   width: 200,\n  //   height: 300,\n  //   position: twgl.v3.create(),\n  //   vert: font && font[char] ? font[char].vert : defaultVert,\n  //   frag: font && font[char] ? font[char].frag : defaultFrag,\n  //   texture: font && font[char] ? font[char].texture : null,\n  //   uniforms: {\n  //     u_matrix: twgl.m4.ortho(0, parseInt(this.canvas.style.width), parseInt(this.canvas.style.height), 0, 400, -400)\n  //   }\n  // });\n\n  // this.addGlyphToText = (glyph, text, glyphIndex) => {\n  //   text.glyphList.splice(glyphIndex, 0, glyph);\n  //   this.adjustPositionGlyphInText(text);\n  //   text.width = this.calcTextTotalWidth(text);\n  //   text.height = this.calcTextTotalHeight(text);\n  // };\n\n  // this.removeGlyphFromText = (text, glyphIndex, numGlyphs) => {\n  //   text.glyphList.splice(glyphIndex, numGlyphs || 1);\n  //   this.adjustPositionGlyphInText(text);\n  //   text.width = this.calcTextTotalWidth(text);\n  //   text.height = this.calcTextTotalHeight(text);\n  // };\n\n  // this.adjustPositionGlyphInText = (text) => {\n  //   // Calculate total text width\n  //   let textWidth = 0;\n  //   let advanceX = 0;\n  //   text.glyphList.forEach((glyph)=> {\n  //     textWidth += glyph.width;\n  //   });\n  //   text.glyphList.forEach((glyph, index, array)=> {\n  //     // Create new vector\n  //     const newPosition = twgl.v3.copy(text.position);\n\n  //     // Align CENTER\n  //     if (text.textAlign === 'CENTER') {\n  //       // Move to left edge of text\n  //       newPosition[0] -= textWidth/2;\n  //       // Advance\n  //       newPosition[0] += glyph.width/2 + advanceX;\n  //       // Calculate next advance\n  //       if (index < array.length-1) advanceX += array[index].width/2 + array[index+1].width/2;\n  //       // Replace old with new\n  //       glyph.position = newPosition;\n  //       // console.log(glyph.position[0]);\n  //     }\n\n      \n  //   });\n  // }\n\n\n  // const testProgramInfo = twgl.createProgramInfo(this.gl, [defaultVert, defaultFrag]);\n\n\n\n  // this.render = () => {\n    \n\n\n  //   // Controls\n    \n\n\n  //   // Loop through textList\n  //   this.textList.forEach((text, index) => {\n\n  //     // Check text hover\n  //     if (this.checkTextMouseHovering(text)) {\n  //       if (!text.mouseHovering) {\n  //         console.log('mouse enter text #' + index);\n  //         text.mouseHovering = true;\n  //       }\n  //     } else {\n  //       if (text.mouseHovering) {\n  //         console.log('mouse leave text #' + index);\n  //         text.mouseHovering = false;\n  //       }\n  //     }\n\n      \n  //     // if (text.mouseHovering) {\n  //     //   document.body.style.cursor = \"text\";\n  //     //   // ProgramInfo\n  //     //   const textProgramInfo = twgl.createProgramInfo(this.gl, [defaultVert, defaultFrag]);\n  //     //   this.gl.useProgram(textProgramInfo.program);\n  //     //   // BufferInfo\n  //     //   const vertexLB = twgl.v3.copy(text.position);\n  //     //   vertexLB[0] -= text.width/2 + text.padding; vertexLB[1] += text.height/2 + text.padding;\n  //     //   const vertexLT = twgl.v3.copy(text.position);\n  //     //   vertexLT[0] -= text.width/2 + text.padding; vertexLT[1] -= text.height/2 + text.padding;\n  //     //   const vertexRT = twgl.v3.copy(text.position);\n  //     //   vertexRT[0] += text.width/2 + text.padding; vertexRT[1] -= text.height/2 + text.padding;\n  //     //   const vertexRB = twgl.v3.copy(text.position);\n  //     //   vertexRB[0] += text.width/2 + text.padding; vertexRB[1] += text.height/2 + text.padding;\n\n  //     //   const textBufferInfo = twgl.createBufferInfoFromArrays(this.gl,\n  //     //     {\n  //     //       position: { numComponents: 3, data: [ ...vertexLB, ...vertexLT, ...vertexLT, ...vertexRT, ...vertexRT, ...vertexRB, ...vertexRB, ...vertexLB ]}\n  //     //     }\n  //     //   );\n  //     //   console.log(textBufferInfo);\n  //     //   twgl.setBuffersAndAttributes(this.gl, textProgramInfo, textBufferInfo);\n  //     //   // Uniforms\n  //     //   twgl.setUniforms(textProgramInfo, {u_matrix: twgl.m4.ortho(0, parseInt(this.canvas.style.width), parseInt(this.canvas.style.height), 0, 400, -400)});\n  //     //   // Draw\n  //     //   twgl.drawBufferInfo(this.gl, textBufferInfo, this.gl.LINES);\n  //     // } else {\n  //     //   document.body.style.cursor = \"default\";\n  //     // }\n      \n      \n      \n  //     // Loop through glyphList\n  //     text.glyphList.forEach((glyph, index) => {\n  //       // ProgramInfo\n  //       const programInfo = twgl.createProgramInfo(this.gl, [glyph.vert, glyph.frag]);\n  //       this.gl.useProgram(programInfo.program);\n  //       // BufferInfo\n  //       const bufferInfo = twgl.primitives.createPlaneBufferInfo(this.gl, glyph.width, glyph.height, 1, 1, twgl.m4.multiply(twgl.m4.translation(glyph.position),twgl.m4.rotationX(Math.PI/2)));\n  //       twgl.setBuffersAndAttributes(this.gl, programInfo, bufferInfo);\n  //       // Uniforms\n  //       twgl.setUniforms(programInfo, glyph.uniforms);\n  //       // Draw\n  //       twgl.drawBufferInfo(this.gl, bufferInfo);\n  //     });\n  //   });\n  //   requestAnimationFrame(this.render);\n  // };\n  // requestAnimationFrame(this.render);\n}\n\n\n\nexport default Renderer;","const textboxList = [\n\n  { // EMPTY TEXTBOX\n    id: 'textbox-1',\n    isEditable: true,\n    verticalAlign: 'BOTTOM',\n    paddingX: 5,// % textboxWidth ( 0 <> (100-charwidth)/2 )\n    paddingY: 5,\n    cursor: null,\n    lineList: [\n      { // Line\n        inlineAlign: 'TOP',\n        horizontalAlign: 'LEFT',\n        wrapLine: false,\n        charList: [\n          { // Char\n            letter: 'A',\n            style: {\n              font: 'defaultFont',\n              size: 30,\n              leading: 1.2,\n              tracking: 0,\n            },\n            // position: {\n              // sublineIndex\n              // sublineY\n              // sublineHeight\n              // charX\n              // charY\n              // charHeight\n              // charWidth\n            // },\n            // renderInfo: {\n              // bufferInfo,\n              // programInfo,\n              // uniforms,\n            // }\n          },\n          { // Char\n            letter: 'A',\n            style: {\n              font: 'defaultFont',\n              size: 20,\n              leading: 1.2,\n              tracking: 0,\n            },\n          },\n          { // Char\n            letter: 'A',\n            style: {\n              font: 'defaultFont',\n              size: 20,\n              leading: 1.2,\n              tracking: 0,\n            },\n          },\n        ]\n      }\n    ]\n  },\n\n  // { // TEXTBOX\n\n  //   id: 'textbox-2',\n  //   isEditable: true,\n  //   verticalAlign: 'TOP',\n  //   paddingX: 5,// % textboxWidth ( 0 <> (100-charwidth)/2 )\n  //   paddingY: 5,\n  //   cursor: {\n  //     iLine: 0,\n  //     iChar: 0,\n  //     startTime: 2150,\n  //   },\n\n  //   lineList: [\n  //     {\n  //       // id: 0,\n  //       inlineAlign: 'MIDDLE',\n  //       horizontalAlign: 'CENTER',\n  //       charList: [\n  //         {\n  //           letter: 'A',\n  //           style: {\n  //             font: 'defaultFont',\n  //             size: 70,\n  //             leading: 1.2,\n  //             tracking: 0,\n  //           },\n  //           // position: {\n  //           //   width: 12,\n  //           //   height: 20,\n  //           //   xLeft: 0,\n  //           //   yBottom: 20,\n  //           // },\n  //           // renderInfo: {\n  //           //   bufferInfo,\n  //           //   programInfo,\n  //           //   uniforms,\n  //           // }\n  //         }\n  //       ]\n  //     },\n\n  //   ],\n  // }\n];\n\n\nexport default textboxList;","export default \"attribute vec4 a_position;\\n \\nuniform mat4 u_matrix;\\nuniform vec3 u_rand;\\n\\nvoid main() {\\n  // Multiply the position by the matrix.\\n  // gl_Position =  u_matrix * a_position;\\n  gl_Position =  u_matrix * a_position;\\n}\"","export default \"#extension GL_OES_standard_derivatives : enable\\n  \\nprecision highp float;\\n// uniform sampler2D texture;\\n// varying vec2 coord;\\n\\n// uniform float time;\\n\\nuniform vec3 u_rand;\\n\\nvoid main() {\\n  \\n  gl_FragColor = vec4(u_rand, 1.);\\n}\"","import defaultVert from './default.vert';\nimport defaultFrag from './default.frag';\n\nconst fontList = [\n  {\n    name: 'defaultFont',\n    glyphs: {\n      A: {\n        ratio: 1.5,\n        vert: defaultVert,\n        frag: defaultFrag,\n        texture: '',\n        textureCoords: {\n          x: 0,\n          y: 0,\n          width: 400,\n          height: 600,\n        }\n      },\n      B: {\n        ratio: 1.5,\n        vert: defaultVert,\n        frag: defaultFrag,\n        texture: '',\n        textureCoords: {\n          x: 0,\n          y: 0,\n          width: 400,\n          height: 600,\n        }\n      }\n    }\n  }\n];\n\nexport default fontList;","\"use strict\";\n\nimport Renderer from '../library/Renderer.js';\n\nimport './style.css';\nimport './reset.css';\n\nimport textData from './textData1.js';\nimport fontData from './defaultFont.js';\n\nconst renderer = new Renderer();\n\nrenderer.setContainer(document.getElementById('textbox-1'));\nrenderer.setContainer(window);\n\nrenderer.feedData(textData, fontData);\nrenderer.setButtons();\nrenderer.start();\n// document.body.appendChild(renderer.canvas);\n// renderer.setSize(window.innerWidth, window.innerHeight);\n\n// const testText = renderer.createText({cursorIndex: 0});\n// renderer.setPositionText(testText, twgl.v3.create(window.innerWidth/2, window.innerHeight/2, 0));\n// renderer.addTextToRenderer(testText);\n\n\n\n\n\n\n/*** Font Data ***/\n\n// <script type='font-data' name='MyFont' src='./myfont'></script>\n// this script should be loaded before Renderer.js\n// this holds data (per glyph texture, shader)\n\n\n\n/*** Renderer Library ***/\n\n// <script src='./Renderer.min.js'></script>\n\n\n\n/*** DOM ***/\n\n// <div id='text1' font='MyFont' >text text</div>\n// renderer sets div size upon change -- height, width(if canvas size fit to text)\n// renderer gets div position each frame -> viewport\n\n\n\n\n/*** Renderer ***/\n\n/* Constructor */\n// const renderer = new Renderer();\n\n/* Loop & Event Listening */\n// renderer.start(), renderer.stop() ?\n// renderer.startRendering();\n// renderer.startListening();\n// renderer.stopRendering();\n// renderer.stopListening();\n\n/* Text */\n// renderer.addText(id, {isEditable: true}); // placeholder div id\n// renderer.removeText(id); // placeholder div id\n// renderer.setBufferParams({size: 50, lineHeight: 60, kerning: 10});\n// renderer.setUniformParams({});\n\n\n/* Events:\n-- Mouse position\n-- Mouse hover\n-- Mouse click\n-- Keydown\n-- Keyup\n-- Slider value change\n*/\n\n\n\n\n\n// Buffer parameters (shared)\n// size, lineHeight, kerning\n// Uniform parameters (user defined)\n// rotation, color, skew, stuff\n\n\n\n/* Possible Arguments:\n\n-- MouseX ()\n-- MouseY\n-- Hover (bool)\n-- Click Count (int)\n-- Time\n-- \n*/\n\n\n\n\n\n\n// Actions\n// insert character (typing, copy and pasting)\n// delete character\n// interact \n\n\n\n\n\n/* Main Tasks:\n\n-- Text Size, Tracking, Leading Changing\n-- Canvas Sizing\n-- Cursor Tracking, Dragging\n\n-- Texture creation\n-- Shader program\n\n-- Time based transitions\n-- Letter to letter transition\n\n\n*/"],"sourceRoot":""}