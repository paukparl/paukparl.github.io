{
  "name": "My First Font",
  "id": "_JRZZ6",
  "glyphs": {
    "A": {
      "letter": "A",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "B": {
      "letter": "B",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "C": {
      "letter": "C",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "D": {
      "letter": "D",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "E": {
      "letter": "E",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "F": {
      "letter": "F",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "G": {
      "letter": "G",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "H": {
      "letter": "H",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "I": {
      "letter": "I",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "J": {
      "letter": "J",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "K": {
      "letter": "K",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "L": {
      "letter": "L",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "M": {
      "letter": "M",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "N": {
      "letter": "N",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "O": {
      "letter": "O",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "P": {
      "letter": "P",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "Q": {
      "letter": "Q",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "R": {
      "letter": "R",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "S": {
      "letter": "S",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "T": {
      "letter": "T",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "U": {
      "letter": "U",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "V": {
      "letter": "V",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "W": {
      "letter": "W",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "X": {
      "letter": "X",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "Y": {
      "letter": "Y",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    },
    "Z": {
      "letter": "Z",
      "texture": "Times_New_Roman_Regular",
      "width": "1",
      "textureSize": "1",
      "alignToTexture": true,
      "u_0": "MOUSE_Y",
      "u_1": "MOUSE_X",
      "u_2": "MOUSE_Y",
      "vert": "attribute vec4 a_position;\nattribute vec2 a_texcoord;\nattribute vec2 a_planecoord;\n\nuniform mat4 u_matrix;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\nvoid main() {\n  gl_Position =  u_matrix * a_position;\n  v_texcoord = a_texcoord;\n  v_planecoord = a_planecoord;\n}",
      "frag": "#extension GL_OES_standard_derivatives : enable\nprecision highp float;\nuniform sampler2D u_fontTexture;\nuniform vec4 u_crop;\nuniform float u_0;\nuniform float u_1;\nuniform float u_2;\nuniform float u_time;\nuniform vec2 u_position;\nuniform vec4 u_edge;\n\nvarying vec2 v_texcoord;\nvarying vec2 v_planecoord;\n\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\nfloat map(float value, float min1, float max1, float min2, float max2) {\n  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n}\n\nvec2 calcTextcoord(vec2 uv) {\n\n  vec2 newUv = vec2(\n\n    map(uv.x, 0., 1., u_edge.x, u_edge.y),\n\n    map(uv.y, 0., 1., u_edge.z, u_edge.w)\n\n  );\n\n  // u_crop.x\n\n  return newUv;\n\n}\n\n\n\nfloat charMask(vec2 uv) {\n\n  \n\n  \n\n  \n\n  vec2 texcoord = calcTextcoord(uv);\n\n  // MSDF -> SDF\n\n  vec3 sample = texture2D(u_fontTexture, texcoord).rgb;\n\n  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;\n\n  sigDist = clamp(sigDist + 0.5, 0., 1.0);\n\n  // Crop\n\n  if (u_crop.x > texcoord.x \n\n  ||  u_crop.y < texcoord.x\n\n  ||  u_crop.z > texcoord.y \n\n  ||  u_crop.w < texcoord.y) {\n\n    sigDist = 0.;\n\n  }\n\n  \n\n  return step(0.5, sigDist);\n\n}\nvoid main() {\n  \n  vec2 st = v_planecoord;\n  \n  st.y = clamp(st.y, 0., 1.-u_0);\n  \n  \n  gl_FragColor = vec4(vec3(0.,0.,0.), charMask(st));\n}\n\n\n\n\n\n\n\n",
      "focused": true,
      "error": false,
      "failed": false
    }
  }
}